{"ast":null,"code":"var _jsxFileName = \"/Users/victorbrambila/one-rep-max/src/containers/MovementPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  PREntry: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '20px',\n    fontFamily: 'PT Sans Caption',\n    fontSize: '18px',\n    marginTop: '100px'\n  },\n  PRvalue: {\n    margin: '10px',\n    width: '200px'\n  },\n  PRChart: {\n    background: '#C4C4C4',\n    borderRadius: '10px',\n    borderCollapse: 'separate',\n    borderSpacing: '10px',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  percentHeader: {\n    borderRadius: '10px',\n    padding: '5px',\n    fontSize: '24px',\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  percentBox: {\n    background: '#E7E7E7',\n    border: '1px solid #C4C4C4',\n    padding: '5px',\n    fontSize: '24px',\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  notFoundPage: {\n    display: 'block',\n    fontSize: '30px',\n    background: '#C4C4C4',\n    padding: '30px',\n    boxShadow: '0px 2px 2px #A9A9A9',\n    width: '100%'\n  },\n  notFoundPageClickHere: {\n    fontSize: '15px'\n  },\n  loadingPage: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    background: '#C4C4C4',\n    boxShadow: '0px 2px 2px #A9A9A9',\n    paddingTop: '10px'\n  },\n  loadingPageText: {\n    fontSize: '36px',\n    fontFamily: 'PT Sans Caption',\n    padding: '30px'\n  }\n}));\n\nconst MovementPage = props => {\n  _s();\n\n  const classes = useStyles();\n  const weights = props.weight;\n  const mapWeights = weights.map(lift => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      //className={classes.movementButtons} \n      id: lift.newMovement.movementWeight,\n      children: lift.newMovement.movementWeight\n    }, lift.newMovement.movementWeight, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  });\n  console.log(mapWeights, \"mapWeight\");\n  console.log(weights, 'weights');\n  const names = props.name;\n  console.log(names, \"names\");\n  const mapNames = names.map(lift => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: lift.newMovement.movementName //className={classes.movementButtons} \n      ,\n      children: lift.newMovement.movementName\n    }, lift.newMovement.movementName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  });\n  const location = useLocation();\n  const pathArray = location.pathname.split('/');\n  const movementNameURL = pathArray[2];\n  const movementWeightURL = pathArray[3];\n  console.log(movementWeightURL);\n  let moooove = names.find(mapNames => mapNames.id === movementNameURL);\n  console.log(moooove, \"moo\");\n\n  let movementFound = () => {\n    if (movementNameURL) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  console.log(mapNames, \"mapNames\");\n  console.log(movementNameURL, \"url\");\n  console.log(movementFound(), \"found\");\n  let [pr, setPr] = useState('');\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    const arr = [];\n    let percentage = 100;\n\n    while (percentage > 50) {\n      arr.push([percentage, pr * percentage / 100]);\n      percentage -= 5;\n    }\n\n    setResults(arr);\n  }, [pr]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: movementNameURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        controlId: \"formMovement\",\n        className: classes.PREntry,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"PR:\", movementFound()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          type: \"number\",\n          placeholder: \"Enter current PR\",\n          value: pr,\n          onChange: e => setPr(e.target.value),\n          className: classes.PRvalue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.PRChart,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: classes.percentHeader,\n          children: [\"Percent\", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 67\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: results.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.percentBox,\n              children: [result[0], \"% \", /*#__PURE__*/_jsxDEV(\"div\", {\n                children: result[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 78\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, result[0], false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovementPage, \"DV3+/7y80AJHFRwzoGp92oxhg9I=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = MovementPage;\n\nconst mapStateToProps = state => {\n  console.log(state.move[0].newMovement.movementWeight, \"mapStateProp\");\n  return {\n    name: state.move,\n    weight: state.move\n  };\n};\n\nexport default connect(mapStateToProps)(MovementPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"MovementPage\");","map":{"version":3,"sources":["/Users/victorbrambila/one-rep-max/src/containers/MovementPage.js"],"names":["React","useEffect","useState","Header","connect","makeStyles","useLocation","useStyles","theme","PREntry","display","alignItems","justifyContent","padding","fontFamily","fontSize","marginTop","PRvalue","margin","width","PRChart","background","borderRadius","borderCollapse","borderSpacing","flexDirection","percentHeader","percentBox","border","notFoundPage","boxShadow","notFoundPageClickHere","loadingPage","paddingTop","loadingPageText","MovementPage","props","classes","weights","weight","mapWeights","map","lift","newMovement","movementWeight","console","log","names","name","mapNames","movementName","location","pathArray","pathname","split","movementNameURL","movementWeightURL","moooove","find","id","movementFound","pr","setPr","results","setResults","arr","percentage","push","e","target","value","result","mapStateToProps","state","move"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useLocation } from 'react-router';\n\nconst useStyles = makeStyles((theme) => ({\n    PREntry: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '20px',\n        fontFamily: 'PT Sans Caption',\n        fontSize: '18px',\n        marginTop: '100px'\n    },\n    PRvalue: {\n        margin: '10px',\n        width: '200px',\n    },\n    PRChart: {\n        background: '#C4C4C4',\n        borderRadius: '10px',\n        borderCollapse: 'separate',\n        borderSpacing: '10px',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    percentHeader: {\n        borderRadius: '10px',\n        padding: '5px',\n        fontSize: '24px', \n        display: 'flex',\n        justifyContent: 'space-around'\n    },\n    percentBox: {\n        background: '#E7E7E7',\n        border: '1px solid #C4C4C4',\n        padding: '5px',\n        fontSize: '24px',\n        display: 'flex',\n        justifyContent: 'space-around'\n    },\n    notFoundPage: {\n        display: 'block',\n        fontSize: '30px',\n        background: '#C4C4C4',\n        padding: '30px',\n        boxShadow: '0px 2px 2px #A9A9A9',\n        width: '100%'\n    },\n    notFoundPageClickHere: {\n        fontSize: '15px',\n    },\n    loadingPage: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        background: '#C4C4C4',\n        boxShadow: '0px 2px 2px #A9A9A9',\n        paddingTop: '10px'\n    },\n    loadingPageText:{\n        fontSize: '36px',\n        fontFamily: 'PT Sans Caption',\n        padding: '30px'\n    },\n}));\n\nconst MovementPage = (props) => {\n    const classes = useStyles();\n    const weights = props.weight;\n    const mapWeights = weights.map((lift) => {\n        return (\n            <div \n                key={lift.newMovement.movementWeight}\n                //className={classes.movementButtons} \n                id={lift.newMovement.movementWeight}\n            >\n                {lift.newMovement.movementWeight}\n            </div>\n        )\n    });\n    console.log(mapWeights, \"mapWeight\");\n    console.log(weights, 'weights');\n\n    const names = props.name\n    console.log(names, \"names\");\n    const mapNames = names.map((lift) => {\n        return (\n            <div \n                key={lift.newMovement.movementName}\n                id={lift.newMovement.movementName}\n                //className={classes.movementButtons} \n               \n            >\n                {lift.newMovement.movementName}\n            </div>\n        )\n    });\n    \n    const location = useLocation();\n    const pathArray = location.pathname.split('/');\n    const movementNameURL = (pathArray[2]);\n    const movementWeightURL = (pathArray[3]);\n    console.log(movementWeightURL);\n    let moooove = names.find(mapNames => mapNames.id === movementNameURL);\n    console.log(moooove, \"moo\");\n    let movementFound = () => {\n        if (movementNameURL) {\n            return <div>Yes</div>\n        } else {\n            return <div>No</div>\n        }\n    }\n    console.log(mapNames, \"mapNames\" );\n    console.log(movementNameURL, \"url\");\n    console.log(movementFound(), \"found\");\n\n    let [pr, setPr] = useState('');\n    const [results, setResults] = useState([]);\n\n    useEffect(() => {\n        const arr = [];\n        let percentage = 100;\n        while (percentage > 50 ) {\n            arr.push([percentage, (pr * percentage) / 100]);\n            percentage -= 5;\n        }\n        setResults(arr);\n    }, [pr]);\n\n    return (\n        <div>\n            <Header title={movementNameURL} />\n            <div>\n                <div controlId=\"formMovement\" className={classes.PREntry}>\n                    <div>PR:{movementFound()}</div>\n                    <div\n                        type=\"number\"\n                        placeholder=\"Enter current PR\"\n                        value={pr}\n                        onChange={(e) => setPr(e.target.value)}\n                        className={classes.PRvalue}\n                    />\n                </div>   \n                <div className={classes.PRChart}>\n                    <h1 className={classes.percentHeader} >Percent<div>Weight</div></h1>\n                    \n                    <div>\n                        {results.map((result) => (\n                        <div key={result[0]}>\n                            <div className={classes.percentBox}>{result[0]}% <div>{result[1]}</div></div>\n                            \n                        </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state.move[0].newMovement.movementWeight, \"mapStateProp\"); \n    return {\n        name: state.move,\n        weight: state.move\n    }\n};\n\n export default connect(mapStateToProps)(MovementPage);"]},"metadata":{},"sourceType":"module"}