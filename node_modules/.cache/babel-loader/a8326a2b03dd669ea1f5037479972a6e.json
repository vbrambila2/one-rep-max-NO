{"ast":null,"code":"var _jsxFileName = \"/Users/victorbrambila/ORM/one-rep-max/src/containers/UpdatePage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from '../components/Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { updateMovement } from '../actions/index';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  updatePage: {\n    marginTop: '150px',\n    display: 'flex',\n    justifyContent: 'center',\n    fontFamily: 'PT Sans Caption'\n  }\n}));\n\nconst UpdatePage = props => {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const pathArray = location.pathname.split('/');\n  const movementIDURL = pathArray[2];\n  const movementNameURL = pathArray[3];\n\n  const onSubmit = formValues => {\n    props.updateMovement(formValues);\n  };\n\n  const selectedID = props.formValues.find(e => e.id === movementIDURL);\n  const mapID = props.formValues.map(move => {\n    return move.id;\n  });\n\n  const renderInputName = ({\n    input,\n    label\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [label, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n        readOnly: true,\n        autoFocus: true,\n        type: \"text\",\n        value: selectedID.movementName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderInputWeight = ({\n    input,\n    label\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [label, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  };\n\n  console.log(mapID, \"id\");\n  console.log(selectedID.id, \"selected\");\n  console.log(props.formValues, \"update\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Update Movement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.updatePage,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: props.handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"movementName\",\n          component: renderInputName,\n          label: \"Movement Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"movementWeight\",\n          label: \"New One Rep Max\",\n          component: renderInputWeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdatePage, \"iVCX2yDQgo1lOrIkgS31pg3flb4=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = UpdatePage;\n\nconst mapStateToProps = state => {\n  return {\n    formValues: state.move\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateMovement: formValues => dispatch(updateMovement(formValues))\n  };\n};\n\nconst formWrap = reduxForm({\n  form: 'addMovementForm'\n})(UpdatePage);\nexport default connect(mapStateToProps, mapDispatchToProps)(formWrap);\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePage\");","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/src/containers/UpdatePage.js"],"names":["React","Header","makeStyles","updateMovement","connect","Field","reduxForm","useLocation","useStyles","updatePage","marginTop","display","justifyContent","fontFamily","UpdatePage","props","classes","location","pathArray","pathname","split","movementIDURL","movementNameURL","onSubmit","formValues","selectedID","find","e","id","mapID","map","move","renderInputName","input","label","movementName","renderInputWeight","console","log","handleSubmit","mapStateToProps","state","mapDispatchToProps","dispatch","formWrap","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { updateMovement } from '../actions/index';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { useLocation } from 'react-router';\n\nconst useStyles = makeStyles(() => ({\n    updatePage: {\n        marginTop: '150px',\n        display: 'flex',\n        justifyContent: 'center',\n        fontFamily: 'PT Sans Caption',\n    },\n}));\n\nconst UpdatePage = (props) => {\n    const classes = useStyles();\n    const location = useLocation();\n    const pathArray = location.pathname.split('/');\n    const movementIDURL = (pathArray[2]);\n    const movementNameURL = (pathArray[3]);\n    const onSubmit = (formValues) => {\n            props.updateMovement(formValues)\n    };\n\n    const selectedID = props.formValues.find((e) => e.id === movementIDURL);\n\n    const mapID = props.formValues.map(move => {\n        return move.id\n    });\n\n    const renderInputName = ({ input, label }) => {\n        return (\n            <div>\n                <label>{label}: </label>\n                <input {...input} readOnly autoFocus={true} type=\"text\" value={selectedID.movementName} /> \n            </div>    \n        )  \n    };\n\n\nconst renderInputWeight = ({ input, label }) => {\n    return (\n        <div>\n            <label>{label}: </label>\n            <input {...input} type=\"number\" /> \n        </div>    \n    )  \n};\n\n    console.log(mapID, \"id\");\n    console.log(selectedID.id, \"selected\");\n\n    console.log(props.formValues, \"update\");\n\n    return (\n        <div>\n            <Header title=\"Update Movement\" />\n            <div className={classes.updatePage}>\n                <form onSubmit={props.handleSubmit(onSubmit)}>\n                    <Field \n                        name=\"movementName\"\n                        component={renderInputName} \n                        label=\"Movement Selected\"\n                    />\n                    <Field\n                        name=\"movementWeight\"  \n                        label=\"New One Rep Max\" \n                        component={renderInputWeight}\n                    />\n                    <button>Update</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        formValues: state.move\n    };\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    return({\n        updateMovement: (formValues) => dispatch(updateMovement(formValues)),\n    })\n};\n\n  const formWrap = reduxForm({\n    form: 'addMovementForm',\n})(UpdatePage);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(formWrap);"]},"metadata":{},"sourceType":"module"}