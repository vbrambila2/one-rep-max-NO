{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = exports.fieldArrayPropTypes = exports.fieldPropTypes = exports.fieldArrayFieldsPropTypes = exports.fieldArrayMetaPropTypes = exports.fieldMetaPropTypes = exports.fieldInputPropTypes = exports.formPropTypes = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar any = _propTypes[\"default\"].any,\n    bool = _propTypes[\"default\"].bool,\n    func = _propTypes[\"default\"].func,\n    shape = _propTypes[\"default\"].shape,\n    string = _propTypes[\"default\"].string,\n    oneOfType = _propTypes[\"default\"].oneOfType,\n    object = _propTypes[\"default\"].object,\n    number = _propTypes[\"default\"].number;\nvar formPropTypes = {\n  // State:\n  anyTouched: bool.isRequired,\n  // true if any of the fields have been marked as touched\n  asyncValidating: oneOfType([bool, string]).isRequired,\n  // true if async validation is running, a string if a field triggered async validation\n  dirty: bool.isRequired,\n  // true if any values are different from initialValues\n  error: any,\n  // form-wide error from '_error' key in validation result\n  form: string.isRequired,\n  // the name of the form\n  invalid: bool.isRequired,\n  // true if there are any validation errors\n  initialized: bool.isRequired,\n  // true if the form has been initialized\n  initialValues: object,\n  // the initialValues object passed to reduxForm\n  pristine: bool.isRequired,\n  // true if the values are the same as initialValues\n  pure: bool.isRequired,\n  // if true, implements shouldComponentUpdate\n  submitting: bool.isRequired,\n  // true if the form is in the process of being submitted\n  submitAsSideEffect: bool.isRequired,\n  // true if onSubmit result will be dispatched\n  submitFailed: bool.isRequired,\n  // true if the form was submitted and failed for any reason\n  submitSucceeded: bool.isRequired,\n  // true if the form was successfully submitted\n  valid: bool.isRequired,\n  // true if there are no validation errors\n  warning: any,\n  // form-wide warning from '_warning' key in validation result\n  // Actions:\n  array: shape({\n    insert: func.isRequired,\n    // function to insert a value into an array field\n    move: func.isRequired,\n    // function to move a value within an array field\n    pop: func.isRequired,\n    // function to pop a value off of an array field\n    push: func.isRequired,\n    // function to push a value onto an array field\n    remove: func.isRequired,\n    // function to remove a value from an array field\n    removeAll: func.isRequired,\n    // function to remove all the values from an array field\n    shift: func.isRequired,\n    // function to shift a value out of an array field\n    splice: func.isRequired,\n    // function to splice a value into an array field\n    swap: func.isRequired,\n    // function to swap values in an array field\n    unshift: func.isRequired // function to unshift a value into an array field\n\n  }),\n  asyncValidate: func.isRequired,\n  // function to trigger async validation\n  autofill: func.isRequired,\n  // action to set a value of a field and mark it as autofilled\n  blur: func.isRequired,\n  // action to mark a field as blurred\n  change: func.isRequired,\n  // action to change the value of a field\n  clearAsyncError: func.isRequired,\n  // action to clear the async error of a field\n  clearFields: func.isRequired,\n  // action to clean fields values for all fields\n  clearSubmitErrors: func.isRequired,\n  // action to remove submitErrors and error\n  destroy: func.isRequired,\n  // action to destroy the form's data in Redux\n  dispatch: func.isRequired,\n  // the Redux dispatch action\n  handleSubmit: func.isRequired,\n  // function to submit the form\n  initialize: func.isRequired,\n  // action to initialize form data\n  reset: func.isRequired,\n  // action to reset the form data to previously initialized values\n  resetSection: func.isRequired,\n  // action to reset the form sections data to previously initialized values\n  touch: func.isRequired,\n  // action to mark fields as touched\n  submit: func.isRequired,\n  // action to trigger a submission of the specified form\n  untouch: func.isRequired,\n  // action to mark fields as untouched\n  // triggerSubmit\n  triggerSubmit: bool,\n  // if true, submits the form on componentWillReceiveProps\n  clearSubmit: func.isRequired // called before a triggered submit, by default clears triggerSubmit\n\n};\nexports.formPropTypes = formPropTypes;\nvar fieldInputPropTypes = {\n  checked: bool,\n  name: string.isRequired,\n  onBlur: func.isRequired,\n  onChange: func.isRequired,\n  onDragStart: func.isRequired,\n  onDrop: func.isRequired,\n  onFocus: func.isRequired,\n  value: any\n};\nexports.fieldInputPropTypes = fieldInputPropTypes;\nvar fieldMetaPropTypes = {\n  active: bool.isRequired,\n  asyncValidating: bool.isRequired,\n  autofilled: bool.isRequired,\n  dirty: bool.isRequired,\n  dispatch: func.isRequired,\n  error: any,\n  form: string.isRequired,\n  invalid: bool.isRequired,\n  pristine: bool.isRequired,\n  submitting: bool.isRequired,\n  submitFailed: bool.isRequired,\n  touched: bool.isRequired,\n  valid: bool.isRequired,\n  visited: bool.isRequired,\n  warning: string\n};\nexports.fieldMetaPropTypes = fieldMetaPropTypes;\nvar fieldArrayMetaPropTypes = {\n  dirty: bool.isRequired,\n  error: any,\n  form: string.isRequired,\n  invalid: bool.isRequired,\n  pristine: bool.isRequired,\n  submitFailed: bool,\n  submitting: bool,\n  valid: bool.isRequired,\n  warning: string\n};\nexports.fieldArrayMetaPropTypes = fieldArrayMetaPropTypes;\nvar fieldArrayFieldsPropTypes = {\n  name: string.isRequired,\n  forEach: func.isRequired,\n  get: func.isRequired,\n  getAll: func.isRequired,\n  insert: func.isRequired,\n  length: number.isRequired,\n  map: func.isRequired,\n  move: func.isRequired,\n  pop: func.isRequired,\n  push: func.isRequired,\n  reduce: func.isRequired,\n  remove: func.isRequired,\n  removeAll: func.isRequired,\n  shift: func.isRequired,\n  swap: func.isRequired,\n  unshift: func.isRequired\n};\nexports.fieldArrayFieldsPropTypes = fieldArrayFieldsPropTypes;\nvar fieldPropTypes = {\n  input: shape(fieldInputPropTypes).isRequired,\n  meta: shape(fieldMetaPropTypes).isRequired\n};\nexports.fieldPropTypes = fieldPropTypes;\nvar fieldArrayPropTypes = {\n  fields: shape(fieldArrayFieldsPropTypes).isRequired,\n  meta: shape(fieldArrayMetaPropTypes).isRequired\n};\nexports.fieldArrayPropTypes = fieldArrayPropTypes;\nvar _default = formPropTypes;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/node_modules/redux-form/lib/propTypes.js"],"names":["_interopRequireDefault","require","exports","__esModule","fieldArrayPropTypes","fieldPropTypes","fieldArrayFieldsPropTypes","fieldArrayMetaPropTypes","fieldMetaPropTypes","fieldInputPropTypes","formPropTypes","_propTypes","any","bool","func","shape","string","oneOfType","object","number","anyTouched","isRequired","asyncValidating","dirty","error","form","invalid","initialized","initialValues","pristine","pure","submitting","submitAsSideEffect","submitFailed","submitSucceeded","valid","warning","array","insert","move","pop","push","remove","removeAll","shift","splice","swap","unshift","asyncValidate","autofill","blur","change","clearAsyncError","clearFields","clearSubmitErrors","destroy","dispatch","handleSubmit","initialize","reset","resetSection","touch","submit","untouch","triggerSubmit","clearSubmit","checked","name","onBlur","onChange","onDragStart","onDrop","onFocus","value","active","autofilled","touched","visited","forEach","get","getAll","length","map","reduce","input","meta","fields","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = exports.fieldArrayPropTypes = exports.fieldPropTypes = exports.fieldArrayFieldsPropTypes = exports.fieldArrayMetaPropTypes = exports.fieldMetaPropTypes = exports.fieldInputPropTypes = exports.formPropTypes = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar any = _propTypes[\"default\"].any,\n    bool = _propTypes[\"default\"].bool,\n    func = _propTypes[\"default\"].func,\n    shape = _propTypes[\"default\"].shape,\n    string = _propTypes[\"default\"].string,\n    oneOfType = _propTypes[\"default\"].oneOfType,\n    object = _propTypes[\"default\"].object,\n    number = _propTypes[\"default\"].number;\nvar formPropTypes = {\n  // State:\n  anyTouched: bool.isRequired,\n  // true if any of the fields have been marked as touched\n  asyncValidating: oneOfType([bool, string]).isRequired,\n  // true if async validation is running, a string if a field triggered async validation\n  dirty: bool.isRequired,\n  // true if any values are different from initialValues\n  error: any,\n  // form-wide error from '_error' key in validation result\n  form: string.isRequired,\n  // the name of the form\n  invalid: bool.isRequired,\n  // true if there are any validation errors\n  initialized: bool.isRequired,\n  // true if the form has been initialized\n  initialValues: object,\n  // the initialValues object passed to reduxForm\n  pristine: bool.isRequired,\n  // true if the values are the same as initialValues\n  pure: bool.isRequired,\n  // if true, implements shouldComponentUpdate\n  submitting: bool.isRequired,\n  // true if the form is in the process of being submitted\n  submitAsSideEffect: bool.isRequired,\n  // true if onSubmit result will be dispatched\n  submitFailed: bool.isRequired,\n  // true if the form was submitted and failed for any reason\n  submitSucceeded: bool.isRequired,\n  // true if the form was successfully submitted\n  valid: bool.isRequired,\n  // true if there are no validation errors\n  warning: any,\n  // form-wide warning from '_warning' key in validation result\n  // Actions:\n  array: shape({\n    insert: func.isRequired,\n    // function to insert a value into an array field\n    move: func.isRequired,\n    // function to move a value within an array field\n    pop: func.isRequired,\n    // function to pop a value off of an array field\n    push: func.isRequired,\n    // function to push a value onto an array field\n    remove: func.isRequired,\n    // function to remove a value from an array field\n    removeAll: func.isRequired,\n    // function to remove all the values from an array field\n    shift: func.isRequired,\n    // function to shift a value out of an array field\n    splice: func.isRequired,\n    // function to splice a value into an array field\n    swap: func.isRequired,\n    // function to swap values in an array field\n    unshift: func.isRequired // function to unshift a value into an array field\n\n  }),\n  asyncValidate: func.isRequired,\n  // function to trigger async validation\n  autofill: func.isRequired,\n  // action to set a value of a field and mark it as autofilled\n  blur: func.isRequired,\n  // action to mark a field as blurred\n  change: func.isRequired,\n  // action to change the value of a field\n  clearAsyncError: func.isRequired,\n  // action to clear the async error of a field\n  clearFields: func.isRequired,\n  // action to clean fields values for all fields\n  clearSubmitErrors: func.isRequired,\n  // action to remove submitErrors and error\n  destroy: func.isRequired,\n  // action to destroy the form's data in Redux\n  dispatch: func.isRequired,\n  // the Redux dispatch action\n  handleSubmit: func.isRequired,\n  // function to submit the form\n  initialize: func.isRequired,\n  // action to initialize form data\n  reset: func.isRequired,\n  // action to reset the form data to previously initialized values\n  resetSection: func.isRequired,\n  // action to reset the form sections data to previously initialized values\n  touch: func.isRequired,\n  // action to mark fields as touched\n  submit: func.isRequired,\n  // action to trigger a submission of the specified form\n  untouch: func.isRequired,\n  // action to mark fields as untouched\n  // triggerSubmit\n  triggerSubmit: bool,\n  // if true, submits the form on componentWillReceiveProps\n  clearSubmit: func.isRequired // called before a triggered submit, by default clears triggerSubmit\n\n};\nexports.formPropTypes = formPropTypes;\nvar fieldInputPropTypes = {\n  checked: bool,\n  name: string.isRequired,\n  onBlur: func.isRequired,\n  onChange: func.isRequired,\n  onDragStart: func.isRequired,\n  onDrop: func.isRequired,\n  onFocus: func.isRequired,\n  value: any\n};\nexports.fieldInputPropTypes = fieldInputPropTypes;\nvar fieldMetaPropTypes = {\n  active: bool.isRequired,\n  asyncValidating: bool.isRequired,\n  autofilled: bool.isRequired,\n  dirty: bool.isRequired,\n  dispatch: func.isRequired,\n  error: any,\n  form: string.isRequired,\n  invalid: bool.isRequired,\n  pristine: bool.isRequired,\n  submitting: bool.isRequired,\n  submitFailed: bool.isRequired,\n  touched: bool.isRequired,\n  valid: bool.isRequired,\n  visited: bool.isRequired,\n  warning: string\n};\nexports.fieldMetaPropTypes = fieldMetaPropTypes;\nvar fieldArrayMetaPropTypes = {\n  dirty: bool.isRequired,\n  error: any,\n  form: string.isRequired,\n  invalid: bool.isRequired,\n  pristine: bool.isRequired,\n  submitFailed: bool,\n  submitting: bool,\n  valid: bool.isRequired,\n  warning: string\n};\nexports.fieldArrayMetaPropTypes = fieldArrayMetaPropTypes;\nvar fieldArrayFieldsPropTypes = {\n  name: string.isRequired,\n  forEach: func.isRequired,\n  get: func.isRequired,\n  getAll: func.isRequired,\n  insert: func.isRequired,\n  length: number.isRequired,\n  map: func.isRequired,\n  move: func.isRequired,\n  pop: func.isRequired,\n  push: func.isRequired,\n  reduce: func.isRequired,\n  remove: func.isRequired,\n  removeAll: func.isRequired,\n  shift: func.isRequired,\n  swap: func.isRequired,\n  unshift: func.isRequired\n};\nexports.fieldArrayFieldsPropTypes = fieldArrayFieldsPropTypes;\nvar fieldPropTypes = {\n  input: shape(fieldInputPropTypes).isRequired,\n  meta: shape(fieldMetaPropTypes).isRequired\n};\nexports.fieldPropTypes = fieldPropTypes;\nvar fieldArrayPropTypes = {\n  fields: shape(fieldArrayFieldsPropTypes).isRequired,\n  meta: shape(fieldArrayMetaPropTypes).isRequired\n};\nexports.fieldArrayPropTypes = fieldArrayPropTypes;\nvar _default = formPropTypes;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}