{"ast":null,"code":"import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT } from '../actions/constants.js';\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_MOVEMENT:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case UPDATE_MOVEMENT:\n      // return {\n      //     ...state, [action.payload.id]: action.payload\n      // };\n      // return state.map(item => {\n      //     if (item.id === action.payload.id) {\n      //         return action.payload\n      //     } else {\n      //         return item\n      //     }\n      // })\n      return state.map(item => item.id === action.payload.id ? item : action.payload);\n\n    case DELETE_MOVEMENT:\n      return [...state.filter(item => item.movementName !== action.payload.movementName)];\n\n    default:\n      return state;\n  }\n};\n\nexport default movementReducer;","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/src/reducers/movementReducer.js"],"names":["UPDATE_MOVEMENT","DELETE_MOVEMENT","CREATE_MOVEMENT","initialState","movementReducer","state","action","type","payload","id","map","item","filter","movementName"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,eAA3C,QAAkE,yBAAlE;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,eAAL;AACI,aAAO,EACH,GAAGG,KADA;AACO,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AADnC,OAAP;;AAGJ,SAAKR,eAAL;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,aAAOK,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYH,MAAM,CAACE,OAAP,CAAeC,EAA3B,GAAgCE,IAAhC,GAAuCL,MAAM,CAACE,OAAhE,CAAP;;AAEL,SAAKP,eAAL;AACI,aAAO,CACH,GAAGI,KAAK,CAACO,MAAN,CAAaD,IAAI,IAAIA,IAAI,CAACE,YAAL,KAAsBP,MAAM,CAACE,OAAP,CAAeK,YAA1D,CADA,CAAP;;AAGJ;AACI,aAAOR,KAAP;AAxBR;AA0BH,CA3BD;;AA6BA,eAAeD,eAAf","sourcesContent":["import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT } from '../actions/constants.js';\n\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_MOVEMENT: \n            return {\n                ...state, [action.payload.id]: action.payload\n            };\n        case UPDATE_MOVEMENT:\n            // return {\n            //     ...state, [action.payload.id]: action.payload\n            // };\n            // return state.map(item => {\n            //     if (item.id === action.payload.id) {\n            //         return action.payload\n            //     } else {\n            //         return item\n            //     }\n            // })\n\n             return state.map(item => item.id === action.payload.id ? item : action.payload );\n            \n        case DELETE_MOVEMENT:\n            return [\n                ...state.filter(item => item.movementName !== action.payload.movementName)\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default movementReducer;"]},"metadata":{},"sourceType":"module"}