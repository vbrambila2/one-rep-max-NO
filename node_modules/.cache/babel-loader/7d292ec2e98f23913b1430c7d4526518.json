{"ast":null,"code":"var _jsxFileName = \"/Users/victorbrambila/ORM/one-rep-max/src/containers/AddPage.js\";\nimport React from 'react';\nimport MovementForm from '../components/MovementForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MovementForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AddPage;\nexport default AddPage; // import React from 'react';\n// import Header from '../components/Header';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { connect } from 'react-redux';\n// import { createMovement } from '../actions/index';\n// import { Field, reduxForm } from 'redux-form';\n// const useStyles = makeStyles(() => ({\n//     addPage: {\n//         display: 'flex',\n//         justifyContent: 'center',\n//         marginTop: '100px'\n//     },\n//     addMovementDiv: {\n//         background: '#C4C4C4',\n//         fontFamily: 'PT Sans Caption',\n//         fontSize: '18px',\n//         borderRadius: '10px',\n//         padding: '20px',\n//         marginTop: '50px',\n//         display: 'flex',\n//         flexDirection: 'column',\n//         textAlign: 'right',\n//       },\n//       movementName: {\n//         padding: '10px',\n//         margin: '10px',\n//       },\n//       textBoxColor: {\n//         background: 'white',\n//         borderRadius: '10px',\n//       },\n//       movementWeight: {\n//         margin: '10px',\n//         padding: '10px',\n//       },\n//       addButton: {\n//           width: '50px',\n//           borderRadius: '10px',\n//           marginLeft: '95px'\n//       },\n// }));\n// const renderInputName = ({ input, label, meta }) => {\n//     return (\n//         <div>\n//             <label>{label}:   </label>\n//             <input {...input} type=\"text\" /> \n//             <div style={{fontSize: \"15px\", color:\"red\"}}>{renderError(meta)}</div>\n//         </div>    \n//     )  \n// };\n// const renderInputWeight = ({ input, label, meta }) => {\n//     return (\n//         <div>\n//             <label>{label}:   </label>\n//             <input {...input} type=\"number\" /> \n//             <div style={{fontSize: \"15px\", color:\"red\"}}>{renderError(meta)}</div>\n//         </div>    \n//     )  \n// };\n// const renderError = ({ error, touched }) => {\n//     if (touched && error ) {\n//         return <div>{error}</div>\n//     };\n// };\n// const AddPage = (props) => {\n//     const classes = useStyles();\n//     const onSubmit = (formValues) => {\n//         props.createMovement(formValues);\n//     };\n//     return (\n//         <div>\n//             <Header title=\"Add Movement\" />\n//             <div className={classes.addPage}>\n//                 <div className={classes.addMovementDiv}>\n//                     <form onSubmit={props.handleSubmit(onSubmit)} >\n//                         <Field \n//                             name=\"movementName\"\n//                             component={renderInputName} \n//                             label=\"Movement Name\" \n//                         />\n//                         <Field\n//                             name=\"movementWeight\" \n//                             component={renderInputWeight} \n//                             label=\"One Rep Max\" \n//                          />\n//                          <button >Submit</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n// const mapStateToProps = (state) => {\n//     return {\n//         formValues: state.move   \n//     }   \n// };\n// const mapDispatchToProps = (dispatch) => {\n//     return({\n//         createMovement: (formValues) => dispatch(createMovement(formValues)),\n//     })\n// };\n// const validate = (formValues) => {\n//     const errors = {};\n//     if (!formValues.movementName) {\n//         errors.movementName = \"Please enter a Name\";\n//     }\n//     if (!formValues.movementWeight) {\n//         errors.movementWeight = \"Please enter a Weight\";\n//     }\n//     return errors;\n// };\n// const formWrap = reduxForm({\n//     form: 'addMovementForm',\n//     validate: validate,\n// })(AddPage);\n// export default connect(mapStateToProps, mapDispatchToProps)(formWrap);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPage\");","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/src/containers/AddPage.js"],"names":["React","MovementForm","AddPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,sBACI;AAAA,2BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;KAAMA,O;AAQN,eAAeA,OAAfsourcesContent":["import React from 'react';\nimport MovementForm from '../components/MovementForm';\n\nconst AddPage = () => {\n    return (\n        <div>\n            <MovementForm />\n        </div>\n    )\n};\n\nexport default AddPage;\n\n// import React from 'react';\n// import Header from '../components/Header';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { connect } from 'react-redux';\n// import { createMovement } from '../actions/index';\n// import { Field, reduxForm } from 'redux-form';\n\n// const useStyles = makeStyles(() => ({\n//     addPage: {\n//         display: 'flex',\n//         justifyContent: 'center',\n//         marginTop: '100px'\n//     },\n//     addMovementDiv: {\n//         background: '#C4C4C4',\n//         fontFamily: 'PT Sans Caption',\n//         fontSize: '18px',\n//         borderRadius: '10px',\n//         padding: '20px',\n//         marginTop: '50px',\n//         display: 'flex',\n//         flexDirection: 'column',\n//         textAlign: 'right',\n//       },\n//       movementName: {\n//         padding: '10px',\n//         margin: '10px',\n//       },\n//       textBoxColor: {\n//         background: 'white',\n//         borderRadius: '10px',\n//       },\n//       movementWeight: {\n//         margin: '10px',\n//         padding: '10px',\n//       },\n//       addButton: {\n//           width: '50px',\n//           borderRadius: '10px',\n//           marginLeft: '95px'\n//       },\n// }));\n\n// const renderInputName = ({ input, label, meta }) => {\n//     return (\n//         <div>\n//             <label>{label}:   </label>\n//             <input {...input} type=\"text\" /> \n//             <div style={{fontSize: \"15px\", color:\"red\"}}>{renderError(meta)}</div>\n//         </div>    \n//     )  \n// };\n\n// const renderInputWeight = ({ input, label, meta }) => {\n//     return (\n//         <div>\n//             <label>{label}:   </label>\n//             <input {...input} type=\"number\" /> \n//             <div style={{fontSize: \"15px\", color:\"red\"}}>{renderError(meta)}</div>\n//         </div>    \n//     )  \n// };\n\n// const renderError = ({ error, touched }) => {\n//     if (touched && error ) {\n//         return <div>{error}</div>\n//     };\n// };\n\n// const AddPage = (props) => {\n//     const classes = useStyles();\n//     const onSubmit = (formValues) => {\n//         props.createMovement(formValues);\n//     };\n\n//     return (\n//         <div>\n//             <Header title=\"Add Movement\" />\n//             <div className={classes.addPage}>\n//                 <div className={classes.addMovementDiv}>\n//                     <form onSubmit={props.handleSubmit(onSubmit)} >\n//                         <Field \n//                             name=\"movementName\"\n//                             component={renderInputName} \n//                             label=\"Movement Name\" \n//                         />\n//                         <Field\n//                             name=\"movementWeight\" \n//                             component={renderInputWeight} \n//                             label=\"One Rep Max\" \n//                          />\n//                          <button >Submit</button>\n//                     </form>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// const mapStateToProps = (state) => {\n//     return {\n//         formValues: state.move   \n//     }   \n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//     return({\n//         createMovement: (formValues) => dispatch(createMovement(formValues)),\n//     })\n// };\n\n// const validate = (formValues) => {\n//     const errors = {};\n\n//     if (!formValues.movementName) {\n//         errors.movementName = \"Please enter a Name\";\n//     }\n\n//     if (!formValues.movementWeight) {\n//         errors.movementWeight = \"Please enter a Weight\";\n//     }\n\n//     return errors;\n// };\n\n// const formWrap = reduxForm({\n//     form: 'addMovementForm',\n//     validate: validate,\n// })(AddPage);\n\n// export default connect(mapStateToProps, mapDispatchToProps)(formWrap);"]},"metadata":{},"sourceType":"module"}