{"ast":null,"code":"var _jsxFileName = \"/Users/victorbrambila/one-rep-max/src/containers/UpdatePage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport Header from '../components/Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { updateMovement } from '../actions/index';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  updatePage: {\n    marginTop: '150px',\n    display: 'flex',\n    justifyContent: 'center',\n    fontFamily: 'PT Sans Caption'\n  }\n}));\n\nconst LocationFunction = () => {\n  _s();\n\n  const location = useLocation();\n  const pathArray = location.pathname.split('/');\n  const movementNameURL = pathArray[2];\n  return movementNameURL;\n};\n\n_s(LocationFunction, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = LocationFunction;\n\nconst renderInputName = ({\n  input,\n  label,\n  meta\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, \":   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      id: \"inputName\",\n      type: \"text\",\n      active: \"true\",\n      value: LocationFunction()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"15px\",\n        color: \"red\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\nconst renderInputWeight = ({\n  input,\n  label,\n  meta\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, \":   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"15px\",\n        color: \"red\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\nconst UpdatePage = props => {\n  _s2();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const pathArray = location.pathname.split('/');\n  const movementNameURL = pathArray[2];\n\n  const onSubmit = formValues => {\n    props.updateMovement(formValues);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Update Movement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.updatePage,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: props.handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"movementName\",\n          component: renderInputName,\n          label: \"Movement Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"movementWeight\",\n          label: \"New One Rep Max: \",\n          component: renderInputWeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(UpdatePage, \"iVCX2yDQgo1lOrIkgS31pg3flb4=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c2 = UpdatePage;\n\nconst mapStateToProps = state => {\n  return {\n    weight: state.move //newWeight: state.newMove\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateMovement: movementWeight => dispatch(updateMovement(movementWeight))\n  };\n};\n\nconst formWrap = reduxForm({\n  form: 'addMovementForm'\n})(UpdatePage);\nexport default connect(mapStateToProps, mapDispatchToProps)(formWrap);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LocationFunction\");\n$RefreshReg$(_c2, \"UpdatePage\");","map":{"version":3,"sources":["/Users/victorbrambila/one-rep-max/src/containers/UpdatePage.js"],"names":["React","Header","makeStyles","updateMovement","connect","Field","reduxForm","useLocation","useStyles","updatePage","marginTop","display","justifyContent","fontFamily","LocationFunction","location","pathArray","pathname","split","movementNameURL","renderInputName","input","label","meta","fontSize","color","renderInputWeight","UpdatePage","props","classes","onSubmit","formValues","handleSubmit","mapStateToProps","state","weight","move","mapDispatchToProps","dispatch","movementWeight","formWrap","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { updateMovement } from '../actions/index';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { useLocation } from 'react-router';\n\nconst useStyles = makeStyles(() => ({\n    updatePage: {\n        marginTop: '150px',\n        display: 'flex',\n        justifyContent: 'center',\n        fontFamily: 'PT Sans Caption',\n    }\n}));\n\nconst LocationFunction = () => {\n    const location = useLocation();\n    const pathArray = location.pathname.split('/');\n    const movementNameURL = (pathArray[2]);\n    return movementNameURL\n};\n    \n\nconst renderInputName = ({ input, label, meta }) => {\n    return (\n        <div>\n            <label>{label}:   </label>\n            <input {...input} id=\"inputName\" type=\"text\" active='true' value={LocationFunction()} /> \n            <div style={{fontSize: \"15px\", color:\"red\"}}></div>\n        </div>    \n    )  \n};\n\nconst renderInputWeight = ({ input, label, meta }) => {\n    return (\n        <div>\n            <label>{label}:   </label>\n            <input {...input} type=\"number\" /> \n            <div style={{fontSize: \"15px\", color:\"red\"}}></div>\n        </div>    \n    )  \n};\n\nconst UpdatePage = (props) => {\n    const classes = useStyles();\n    const location = useLocation();\n    const pathArray = location.pathname.split('/');\n    const movementNameURL = (pathArray[2]);\n    const onSubmit = (formValues) => {\n\n            props.updateMovement(formValues)\n\n    };\n\n    return (\n        <div>\n            <Header title=\"Update Movement\" />\n            <div className={classes.updatePage}>\n                <form onSubmit={props.handleSubmit(onSubmit)}>\n                    <Field \n                        name=\"movementName\"\n                        component={renderInputName} \n                        label=\"Movement Selected\" \n                    />\n                    <Field\n                        name=\"movementWeight\"  \n                        label=\"New One Rep Max: \" \n                        component={renderInputWeight}\n                    />\n                    <button>Submit</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n      weight: state.move,\n      //newWeight: state.newMove\n    };\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    return({\n        updateMovement: (movementWeight) => dispatch(updateMovement(movementWeight)),\n    })\n};\n\n  const formWrap = reduxForm({\n    form: 'addMovementForm',\n})(UpdatePage);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(formWrap);"]},"metadata":{},"sourceType":"module"}