{"ast":null,"code":"import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT } from '../actions/constants.js';\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_MOVEMENT:\n      return [...state, action.payload];\n\n    case UPDATE_MOVEMENT:\n      return state.map(item => {\n        if (item.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return item;\n        }\n      });\n\n    case DELETE_MOVEMENT:\n      return state.filter(item => item.id !== action.payload.id), console.log(action.payload.id, \"delete\");\n    // return state.map(item => {\n    //     if (item.id === action.payload.id) {\n    //         return action.payload\n    //     } else {\n    //         return item\n    //     }\n    // })\n\n    default:\n      return state;\n  }\n};\n\nexport default movementReducer;","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/src/reducers/movementReducer.js"],"names":["UPDATE_MOVEMENT","DELETE_MOVEMENT","CREATE_MOVEMENT","initialState","movementReducer","state","action","type","payload","map","item","id","filter","console","log"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,eAA3C,QAAkE,yBAAlE;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,eAAL;AACI,aAAO,CACH,GAAGG,KADA,EACOC,MAAM,CAACE,OADd,CAAP;;AAGJ,SAAKR,eAAL;AACI,aAAOK,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI;AACrB,YAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeG,EAA/B,EAAmC;AAC/B,iBAAOL,MAAM,CAACE,OAAd;AACH,SAFD,MAEO;AACH,iBAAOE,IAAP;AACH;AACJ,OANM,CAAP;;AAOJ,SAAKT,eAAL;AAEI,aAAOI,KAAK,CAACO,MAAN,CAAaF,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeG,EAAhD,GACPE,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACE,OAAP,CAAeG,EAA3B,EAA+B,QAA/B,CADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACJ;AACI,aAAON,KAAP;AA1BR;AA4BH,CA7BD;;AA+BA,eAAeD,eAAf","sourcesContent":["import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT } from '../actions/constants.js';\n\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_MOVEMENT: \n            return [\n                ...state, action.payload\n            ];\n        case UPDATE_MOVEMENT:\n            return state.map(item => {\n                if (item.id === action.payload.id) {\n                    return action.payload\n                } else {\n                    return item\n                }\n            }) \n        case DELETE_MOVEMENT:\n            \n            return state.filter(item => item.id !== action.payload.id),\n            console.log(action.payload.id, \"delete\");\n            \n            // return state.map(item => {\n            //     if (item.id === action.payload.id) {\n            //         return action.payload\n            //     } else {\n            //         return item\n            //     }\n            // })\n        default:\n            return state;\n    }\n};\n\nexport default movementReducer;"]},"metadata":{},"sourceType":"module"}