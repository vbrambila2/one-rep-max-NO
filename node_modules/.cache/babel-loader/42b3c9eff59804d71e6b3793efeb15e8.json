{"ast":null,"code":"var _jsxFileName = \"/Users/victorbrambila/one-rep-max/src/containers/AddPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Header from '../components/Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { addMovement } from '../actions/index';\nimport { useDispatch, useSelector } from 'react-redux';\nimport history from '../history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  addPage: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '100px'\n  },\n  addMovementDiv: {\n    background: '#C4C4C4',\n    fontFamily: 'PT Sans Caption',\n    fontSize: '18px',\n    borderRadius: '10px',\n    padding: '20px',\n    marginTop: '50px',\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'right'\n  },\n  movementName: {\n    padding: '10px',\n    margin: '10px'\n  },\n  textBoxColor: {\n    background: 'white',\n    borderRadius: '10px'\n  },\n  movementWeight: {\n    margin: '10px',\n    padding: '10px'\n  },\n  addButton: {\n    background: '#E7E7E7',\n    width: '50px',\n    borderRadius: '10px',\n    marginLeft: '95px'\n  }\n}));\n\nconst AddPage = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [weight, setWeight] = useState(0); //const name = useSelector(state => state.name);\n  //const weight = useSelector(state => state.weight);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  console.log(name, weight);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Add Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.addPage,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.addMovementDiv,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.movementName,\n          label: \"Enter Movement Name\",\n          InputProps: {\n            className: \"textBoxColor\"\n          },\n          variant: \"outlined\",\n          onChange: event => {\n            const {\n              value\n            } = event.target;\n            setName(value);\n          }\n        }, \"name\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.movementWeight,\n          label: \"Enter Movement Weight\",\n          type: \"number\",\n          variant: \"outlined\",\n          onChange: event => {\n            const {\n              value\n            } = event.target;\n            setWeight(value);\n          },\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: \"lb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 53\n            }, this),\n            className: \"textBoxColor\"\n          }\n        }, \"weight\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.addButton,\n          variant: \"outlined\",\n          onClick: () => dispatch(addMovement(name, weight)),\n          children: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddPage, \"cGyawMU0lmeKhZgTk7keiuCxCZ8=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = AddPage;\n\nconst mapStateToProps = state => {\n  return {\n    name: state.move.movement.name,\n    weight: state.move.movement.weight\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addMovement: (name, weight) => dispatch(addMovement(name, weight))\n  };\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect)(AddPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPage\");","map":{"version":3,"sources":["/Users/victorbrambila/one-rep-max/src/containers/AddPage.js"],"names":["React","useState","Header","makeStyles","TextField","InputAdornment","Button","AddCircleIcon","connect","compose","addMovement","useDispatch","useSelector","history","useStyles","theme","addPage","display","justifyContent","marginTop","addMovementDiv","background","fontFamily","fontSize","borderRadius","padding","flexDirection","textAlign","movementName","margin","textBoxColor","movementWeight","addButton","width","marginLeft","AddPage","name","setName","weight","setWeight","classes","dispatch","console","log","className","event","value","target","endAdornment","mapStateToProps","state","move","movement","mapDispatchToProps","withConnect"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Header from '../components/Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { addMovement } from '../actions/index';\nimport { useDispatch, useSelector }  from 'react-redux';\nimport history from '../history';\n\nconst useStyles = makeStyles((theme) => ({\n    addPage: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '100px'\n    },\n    addMovementDiv: {\n        background: '#C4C4C4',\n        fontFamily: 'PT Sans Caption',\n        fontSize: '18px',\n        borderRadius: '10px',\n        padding: '20px',\n        marginTop: '50px',\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'right',\n      },\n      movementName: {\n        padding: '10px',\n        margin: '10px',\n      },\n      textBoxColor: {\n        background: 'white',\n        borderRadius: '10px',\n      },\n      movementWeight: {\n        margin: '10px',\n        padding: '10px',\n      },\n      addButton: {\n          background: '#E7E7E7',\n          width: '50px',\n          borderRadius: '10px',\n          marginLeft: '95px'\n      },\n}));\n\nconst AddPage = () => {\n    const [name, setName] = useState('');\n    const [weight, setWeight] = useState(0);\n  //const name = useSelector(state => state.name);\n    //const weight = useSelector(state => state.weight);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    console.log(name, weight);\n\n    return (\n        <div>\n            <Header title=\"Add Page\" />\n            <div className={classes.addPage}>\n                <div className={classes.addMovementDiv}>\n                    <TextField \n                        className={classes.movementName} \n                        key=\"name\" \n                        label=\"Enter Movement Name\" \n                        InputProps= {{className: \"textBoxColor\"}}\n                        variant=\"outlined\"\n                        onChange={event => {\n                            const { value } = event.target;\n                            setName(value);\n                        }} \n                        \n                         />    \n                    <TextField \n                        className={classes.movementWeight} \n                        key=\"weight\" \n                        label=\"Enter Movement Weight\" \n                        type=\"number\" \n                        variant=\"outlined\"\n                        onChange={event => {\n                            const { value } = event.target;\n                            setWeight(value);\n                        }}\n                        \n                        InputProps= {{endAdornment: <InputAdornment position=\"end\">lb</InputAdornment>, className: \"textBoxColor\"}} />\n                    <Button \n                        className={classes.addButton}\n                        variant=\"outlined\"\n                        onClick={() => dispatch(addMovement(name, weight))}\n                        >\n                        <AddCircleIcon />\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        name: state.move.movement.name,\n        weight: state.move.movement.weight,   \n    }   \n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return({\n        addMovement: (name, weight) => dispatch(addMovement(name, weight)),\n    })\n};\n\nconst withConnect = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n);\n\nexport default compose(withConnect)(AddPage);"]},"metadata":{},"sourceType":"module"}