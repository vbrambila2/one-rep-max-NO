{"ast":null,"code":"var _jsxFileName = \"/Users/victorbrambila/ORM/one-rep-max/src/containers/UpdatePage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport UpdateMovementForm from '../components/MovementForm';\nimport { useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatePage = props => {\n  _s();\n\n  const location = useLocation();\n  const pathArray = location.pathname.split('/');\n  const movementIDURL = pathArray[1];\n  const selected = props.move.find(move => move.id == movementIDURL);\n  const selectedID = selected.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(UpdateMovementForm, {\n      title: \"Update Movement\",\n      label: \"New One Rep Max\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdatePage, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = UpdatePage;\nexport default UpdatePage; // import React from 'react';\n// import Header from '../components/Header';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { updateMovement } from '../actions/index';\n// import { connect } from 'react-redux';\n// import { Field, reduxForm } from 'redux-form';\n// import { useLocation } from 'react-router';\n// const useStyles = makeStyles(() => ({\n//     updatePage: {\n//         marginTop: '150px',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         fontFamily: 'PT Sans Caption',\n//     },\n// }));\n// const UpdatePage = (props) => {\n//     const classes = useStyles();\n//     const location = useLocation();\n//     const pathArray = location.pathname.split('/');\n//     const movementIDURL = (pathArray[1]);\n//     const selected = props.move.find((move) => move.id == movementIDURL);\n//     const selectedID = selected.id\n//     const renderInputName = ({ input, label }) => {\n//         return (\n//             <div>\n//                 <label>{label}: </label>\n//                 <input {...input} autoFocus={true} type=\"text\" value={selected.movementName} /> \n//             </div>    \n//         )  \n//     };\n//     const renderNewInputWeight = ({ input, label }) => {\n//         return (\n//             <div>\n//                 <label>{label}: </label>\n//                 <input {...input} type=\"number\" /> \n//             </div>    \n//         )  \n//     };\n//     const onSubmit = formValues => {\n//         console.log(formValues, \"new\");\n//         props.updateMovement(selectedID, formValues)\n//     };\n//     console.log(selectedID, \"selected\");\n//     console.log(props.move, \"update\");\n//     return (\n//         <div>\n//             <Header title=\"Update Movement\" />\n//             <div className={classes.updatePage}>\n//                 <form onSubmit={props.handleSubmit(onSubmit)}>\n//                     <Field \n//                         name=\"movementName\"\n//                         label=\"Movement Selected\"\n//                         component={renderInputName} \n//                     />\n//                     <Field\n//                         name=\"movementWeight\"  \n//                         label=\"New One Rep Max\" \n//                         component={renderNewInputWeight}\n//                     />\n//                     <button type=\"submit\">Update</button>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// };\n// const mapStateToProps = state => {\n//     return {\n//         move: state.move\n//     };\n//   };\n//   const mapDispatchToProps = (dispatch) => {\n//     return({\n//         updateMovement: (formValues) => dispatch(updateMovement(formValues)),\n//     })\n// };\n// const formWrap = reduxForm({\n//     form: 'updateMovementForm',\n// })(UpdatePage);\n// export default connect(mapStateToProps, mapDispatchToProps)(formWrap);\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePage\");","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/src/containers/UpdatePage.js"],"names":["React","UpdateMovementForm","useLocation","UpdatePage","props","location","pathArray","pathname","split","movementIDURL","selected","move","find","id","selectedID"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,SAASC,WAAT,QAA4B,cAA5B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,SAAS,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAlB;AACA,QAAMC,aAAa,GAAIH,SAAS,CAAC,CAAD,CAAhC;AACA,QAAMI,QAAQ,GAAGN,KAAK,CAACO,IAAN,CAAWC,IAAX,CAAiBD,IAAD,IAAUA,IAAI,CAACE,EAAL,IAAWJ,aAArC,CAAjB;AACA,QAAMK,UAAU,GAAGJ,QAAQ,CAACG,EAA5B;AAEA,sBACI;AAAA,2BACI,QAAC,kBAAD;AAAoB,MAAA,KAAK,EAAC,iBAA1B;AAA4C,MAAA,KAAK,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAZD;;GAAMV,U;UACeD,W;;;KADfC,U;AAcN,eAAeA,UAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport UpdateMovementForm from '../components/MovementForm';\nimport { useLocation } from 'react-router';\n\nconst UpdatePage = (props) => {\n    const location = useLocation();\n    const pathArray = location.pathname.split('/');\n    const movementIDURL = (pathArray[1]);\n    const selected = props.move.find((move) => move.id == movementIDURL);\n    const selectedID = selected.id\n\n    return (\n        <div>\n            <UpdateMovementForm title=\"Update Movement\" label=\"New One Rep Max\" />\n        </div>\n    )\n};\n\nexport default UpdatePage;\n\n\n// import React from 'react';\n// import Header from '../components/Header';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { updateMovement } from '../actions/index';\n// import { connect } from 'react-redux';\n// import { Field, reduxForm } from 'redux-form';\n// import { useLocation } from 'react-router';\n\n// const useStyles = makeStyles(() => ({\n//     updatePage: {\n//         marginTop: '150px',\n//         display: 'flex',\n//         justifyContent: 'center',\n//         fontFamily: 'PT Sans Caption',\n//     },\n// }));\n\n// const UpdatePage = (props) => {\n//     const classes = useStyles();\n//     const location = useLocation();\n//     const pathArray = location.pathname.split('/');\n//     const movementIDURL = (pathArray[1]);\n//     const selected = props.move.find((move) => move.id == movementIDURL);\n//     const selectedID = selected.id\n\n//     const renderInputName = ({ input, label }) => {\n//         return (\n//             <div>\n//                 <label>{label}: </label>\n//                 <input {...input} autoFocus={true} type=\"text\" value={selected.movementName} /> \n//             </div>    \n//         )  \n//     };\n\n//     const renderNewInputWeight = ({ input, label }) => {\n//         return (\n//             <div>\n//                 <label>{label}: </label>\n//                 <input {...input} type=\"number\" /> \n//             </div>    \n//         )  \n//     };\n\n//     const onSubmit = formValues => {\n//         console.log(formValues, \"new\");\n//         props.updateMovement(selectedID, formValues)\n//     };\n\n//     console.log(selectedID, \"selected\");\n//     console.log(props.move, \"update\");\n\n//     return (\n//         <div>\n//             <Header title=\"Update Movement\" />\n//             <div className={classes.updatePage}>\n//                 <form onSubmit={props.handleSubmit(onSubmit)}>\n//                     <Field \n//                         name=\"movementName\"\n//                         label=\"Movement Selected\"\n//                         component={renderInputName} \n//                     />\n//                     <Field\n//                         name=\"movementWeight\"  \n//                         label=\"New One Rep Max\" \n//                         component={renderNewInputWeight}\n//                     />\n//                     <button type=\"submit\">Update</button>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// };\n\n// const mapStateToProps = state => {\n//     return {\n//         move: state.move\n//     };\n//   };\n\n//   const mapDispatchToProps = (dispatch) => {\n//     return({\n//         updateMovement: (formValues) => dispatch(updateMovement(formValues)),\n//     })\n// };\n\n// const formWrap = reduxForm({\n//     form: 'updateMovementForm',\n// })(UpdatePage);\n\n// export default connect(mapStateToProps, mapDispatchToProps)(formWrap);"]},"metadata":{},"sourceType":"module"}