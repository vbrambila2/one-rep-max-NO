{"ast":null,"code":"import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT } from '../actions/constants.js';\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_MOVEMENT:\n      return [...state, action.payload];\n\n    case UPDATE_MOVEMENT:\n      console.log(action.payload.id, \"reducer\"); // return {\n      //     ...state, [action.payload.id]: action.payload\n      // };\n      // return state.map(item => {\n      //     if (item.id === action.payload.id) {\n      //         return action.payload.data\n      //     } else {\n      //         return item\n      //     }\n      // })\n      //return [ ...state.map(item => item.id === action.payload.id ? {...item, movementWeight: action.payload.data.movementWeight} : item)];\n\n      const clonedMovement = state;\n      const movementIndexToUpdate = clonedMovement.findIndex(item => item.id === action.payload.id);\n      const updatedMovement = { ...clonedMovement[movementIndexToUpdate],\n        movementWeight: action.payload.movementWeight\n      };\n      const updatedMovements = [...clonedMovement];\n      updatedMovements[movementIndexToUpdate] = updatedMovement;\n      return [...updatedMovements];\n\n    case DELETE_MOVEMENT:\n      return [...state.filter(item => item.movementName !== action.payload.movementName)];\n\n    default:\n      return state;\n  }\n};\n\nexport default movementReducer;","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/src/reducers/movementReducer.js"],"names":["UPDATE_MOVEMENT","DELETE_MOVEMENT","CREATE_MOVEMENT","initialState","movementReducer","state","action","type","payload","console","log","id","clonedMovement","movementIndexToUpdate","findIndex","item","updatedMovement","movementWeight","updatedMovements","filter","movementName"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,eAA3C,QAAkE,yBAAlE;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,eAAL;AACI,aAAO,CACH,GAAGG,KADA,EACOC,MAAM,CAACE,OADd,CAAP;;AAGJ,SAAKR,eAAL;AACIS,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAP,CAAeG,EAA3B,EAA+B,SAA/B,EADJ,CAGI;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,YAAMC,cAAc,GAAGP,KAAvB;AACA,YAAMQ,qBAAqB,GAAGD,cAAc,CAACE,SAAf,CAC3BC,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeG,EADT,CAA9B;AAGA,YAAMK,eAAe,GAAG,EACtB,GAAGJ,cAAc,CAACC,qBAAD,CADK;AAEtBI,QAAAA,cAAc,EAAEX,MAAM,CAACE,OAAP,CAAeS;AAFT,OAAxB;AAIA,YAAMC,gBAAgB,GAAG,CAAC,GAAGN,cAAJ,CAAzB;AACAM,MAAAA,gBAAgB,CAACL,qBAAD,CAAhB,GAA0CG,eAA1C;AACA,aAAO,CAAC,GAAGE,gBAAJ,CAAP;;AAGJ,SAAKjB,eAAL;AACI,aAAO,CACH,GAAGI,KAAK,CAACc,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACK,YAAL,KAAsBd,MAAM,CAACE,OAAP,CAAeY,YAA1D,CADA,CAAP;;AAGJ;AACI,aAAOf,KAAP;AAxCR;AA0CH,CA3CD;;AA6CA,eAAeD,eAAf","sourcesContent":["import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT } from '../actions/constants.js';\n\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_MOVEMENT: \n            return [\n                ...state, action.payload\n            ];\n        case UPDATE_MOVEMENT:\n            console.log(action.payload.id, \"reducer\")\n\n            // return {\n            //     ...state, [action.payload.id]: action.payload\n            // };\n\n            // return state.map(item => {\n            //     if (item.id === action.payload.id) {\n            //         return action.payload.data\n            //     } else {\n            //         return item\n            //     }\n            // })\n\n            //return [ ...state.map(item => item.id === action.payload.id ? {...item, movementWeight: action.payload.data.movementWeight} : item)];\n\n            const clonedMovement = state;\n            const movementIndexToUpdate = clonedMovement.findIndex(\n              (item) => item.id === action.payload.id\n            );\n            const updatedMovement = {\n              ...clonedMovement[movementIndexToUpdate],\n              movementWeight: action.payload.movementWeight,\n            };\n            const updatedMovements = [...clonedMovement];\n            updatedMovements[movementIndexToUpdate] = updatedMovement;\n            return [...updatedMovements];\n             \n            \n        case DELETE_MOVEMENT:\n            return [\n                ...state.filter(item => item.movementName !== action.payload.movementName)\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default movementReducer;"]},"metadata":{},"sourceType":"module"}