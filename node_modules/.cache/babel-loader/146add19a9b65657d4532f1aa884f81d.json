{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _actionTypes = require(\"./actionTypes\");\n\nvar _deleteInWithCleanUp = _interopRequireDefault(require(\"./deleteInWithCleanUp\"));\n\nvar _plain = _interopRequireDefault(require(\"./structure/plain\"));\n\nvar shouldDelete = function shouldDelete(_ref) {\n  var getIn = _ref.getIn;\n  return function (state, path) {\n    var initialValuesPath = null;\n\n    if (/^values/.test(path)) {\n      initialValuesPath = path.replace('values', 'initial');\n    }\n\n    var initialValueComparison = initialValuesPath ? getIn(state, initialValuesPath) === undefined : true;\n    return getIn(state, path) !== undefined && initialValueComparison;\n  };\n};\n\nvar isReduxFormAction = function isReduxFormAction(action) {\n  return action && action.type && action.type.length > _actionTypes.prefix.length && action.type.substring(0, _actionTypes.prefix.length) === _actionTypes.prefix;\n};\n\nfunction createReducer(structure) {\n  var _behaviors;\n\n  var deepEqual = structure.deepEqual,\n      empty = structure.empty,\n      forEach = structure.forEach,\n      getIn = structure.getIn,\n      setIn = structure.setIn,\n      deleteIn = structure.deleteIn,\n      fromJS = structure.fromJS,\n      keys = structure.keys,\n      size = structure.size,\n      some = structure.some,\n      splice = structure.splice;\n  var deleteInWithCleanUp = (0, _deleteInWithCleanUp[\"default\"])(structure)(shouldDelete);\n  var plainDeleteInWithCleanUp = (0, _deleteInWithCleanUp[\"default\"])(_plain[\"default\"])(shouldDelete);\n\n  var doSplice = function doSplice(state, key, field, index, removeNum, value, force) {\n    var existing = getIn(state, key + \".\" + field);\n    return existing || force ? setIn(state, key + \".\" + field, splice(existing, index, removeNum, value)) : state;\n  };\n\n  var doPlainSplice = function doPlainSplice(state, key, field, index, removeNum, value, force) {\n    var slice = getIn(state, key);\n\n    var existing = _plain[\"default\"].getIn(slice, field);\n\n    return existing || force ? setIn(state, key, _plain[\"default\"].setIn(slice, field, _plain[\"default\"].splice(existing, index, removeNum, value))) : state;\n  };\n\n  var rootKeys = ['values', 'fields', 'submitErrors', 'asyncErrors'];\n\n  var arraySplice = function arraySplice(state, field, index, removeNum, value) {\n    var result = state;\n    var nonValuesValue = value != null ? empty : undefined;\n    result = doSplice(result, 'values', field, index, removeNum, value, true);\n    result = doSplice(result, 'fields', field, index, removeNum, nonValuesValue);\n    result = doPlainSplice(result, 'syncErrors', field, index, removeNum, undefined);\n    result = doPlainSplice(result, 'syncWarnings', field, index, removeNum, undefined);\n    result = doSplice(result, 'submitErrors', field, index, removeNum, undefined);\n    result = doSplice(result, 'asyncErrors', field, index, removeNum, undefined);\n    return result;\n  };\n\n  var behaviors = (_behaviors = {}, _behaviors[_actionTypes.ARRAY_INSERT] = function (state, _ref2) {\n    var _ref2$meta = _ref2.meta,\n        field = _ref2$meta.field,\n        index = _ref2$meta.index,\n        payload = _ref2.payload;\n    return arraySplice(state, field, index, 0, payload);\n  }, _behaviors[_actionTypes.ARRAY_MOVE] = function (state, _ref3) {\n    var _ref3$meta = _ref3.meta,\n        field = _ref3$meta.field,\n        from = _ref3$meta.from,\n        to = _ref3$meta.to;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    var result = state;\n\n    if (length) {\n      rootKeys.forEach(function (key) {\n        var path = key + \".\" + field;\n\n        if (getIn(result, path)) {\n          var value = getIn(result, path + \"[\" + from + \"]\");\n          result = setIn(result, path, splice(getIn(result, path), from, 1)); // remove\n\n          result = setIn(result, path, splice(getIn(result, path), to, 0, value)); // insert\n        }\n      });\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.ARRAY_POP] = function (state, _ref4) {\n    var field = _ref4.meta.field;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, length - 1, 1) : state;\n  }, _behaviors[_actionTypes.ARRAY_PUSH] = function (state, _ref5) {\n    var field = _ref5.meta.field,\n        payload = _ref5.payload;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return arraySplice(state, field, length, 0, payload);\n  }, _behaviors[_actionTypes.ARRAY_REMOVE] = function (state, _ref6) {\n    var _ref6$meta = _ref6.meta,\n        field = _ref6$meta.field,\n        index = _ref6$meta.index;\n    return arraySplice(state, field, index, 1);\n  }, _behaviors[_actionTypes.ARRAY_REMOVE_ALL] = function (state, _ref7) {\n    var field = _ref7.meta.field;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, 0, length) : state;\n  }, _behaviors[_actionTypes.ARRAY_SHIFT] = function (state, _ref8) {\n    var field = _ref8.meta.field;\n    return arraySplice(state, field, 0, 1);\n  }, _behaviors[_actionTypes.ARRAY_SPLICE] = function (state, _ref9) {\n    var _ref9$meta = _ref9.meta,\n        field = _ref9$meta.field,\n        index = _ref9$meta.index,\n        removeNum = _ref9$meta.removeNum,\n        payload = _ref9.payload;\n    return arraySplice(state, field, index, removeNum, payload);\n  }, _behaviors[_actionTypes.ARRAY_SWAP] = function (state, _ref10) {\n    var _ref10$meta = _ref10.meta,\n        field = _ref10$meta.field,\n        indexA = _ref10$meta.indexA,\n        indexB = _ref10$meta.indexB;\n    var result = state;\n    rootKeys.forEach(function (key) {\n      var valueA = getIn(result, key + \".\" + field + \"[\" + indexA + \"]\");\n      var valueB = getIn(result, key + \".\" + field + \"[\" + indexB + \"]\");\n\n      if (valueA !== undefined || valueB !== undefined) {\n        result = setIn(result, key + \".\" + field + \"[\" + indexA + \"]\", valueB);\n        result = setIn(result, key + \".\" + field + \"[\" + indexB + \"]\", valueA);\n      }\n    });\n    return result;\n  }, _behaviors[_actionTypes.ARRAY_UNSHIFT] = function (state, _ref11) {\n    var field = _ref11.meta.field,\n        payload = _ref11.payload;\n    return arraySplice(state, field, 0, 0, payload);\n  }, _behaviors[_actionTypes.AUTOFILL] = function (state, _ref12) {\n    var field = _ref12.meta.field,\n        payload = _ref12.payload;\n    var result = state;\n    result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n    result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n    result = setIn(result, \"fields.\" + field + \".autofilled\", true);\n    result = setIn(result, \"values.\" + field, payload);\n    return result;\n  }, _behaviors[_actionTypes.BLUR] = function (state, _ref13) {\n    var _ref13$meta = _ref13.meta,\n        field = _ref13$meta.field,\n        touch = _ref13$meta.touch,\n        payload = _ref13.payload;\n    var result = state;\n    var initial = getIn(result, \"initial.\" + field);\n\n    if (initial === undefined && payload === '') {\n      result = deleteInWithCleanUp(result, \"values.\" + field);\n    } else if (payload !== undefined) {\n      result = setIn(result, \"values.\" + field, payload);\n    }\n\n    if (field === getIn(result, 'active')) {\n      result = deleteIn(result, 'active');\n    }\n\n    result = deleteIn(result, \"fields.\" + field + \".active\");\n\n    if (touch) {\n      result = setIn(result, \"fields.\" + field + \".touched\", true);\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.CHANGE] = function (state, _ref14) {\n    var _ref14$meta = _ref14.meta,\n        field = _ref14$meta.field,\n        touch = _ref14$meta.touch,\n        persistentSubmitErrors = _ref14$meta.persistentSubmitErrors,\n        payload = _ref14.payload;\n    var result = state;\n    var initial = getIn(result, \"initial.\" + field);\n\n    if (initial === undefined && payload === '' || payload === undefined) {\n      result = deleteInWithCleanUp(result, \"values.\" + field);\n    } else if ((0, _isFunction2[\"default\"])(payload)) {\n      var fieldCurrentValue = getIn(state, \"values.\" + field);\n      result = setIn(result, \"values.\" + field, payload(fieldCurrentValue, state.values));\n    } else {\n      result = setIn(result, \"values.\" + field, payload);\n    }\n\n    result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n\n    if (!persistentSubmitErrors) {\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n    }\n\n    result = deleteInWithCleanUp(result, \"fields.\" + field + \".autofilled\");\n\n    if (touch) {\n      result = setIn(result, \"fields.\" + field + \".touched\", true);\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.CLEAR_SUBMIT] = function (state) {\n    return deleteIn(state, 'triggerSubmit');\n  }, _behaviors[_actionTypes.CLEAR_SUBMIT_ERRORS] = function (state) {\n    var result = state;\n    result = deleteInWithCleanUp(result, 'submitErrors');\n    result = deleteIn(result, 'error');\n    return result;\n  }, _behaviors[_actionTypes.CLEAR_ASYNC_ERROR] = function (state, _ref15) {\n    var field = _ref15.meta.field;\n    return deleteIn(state, \"asyncErrors.\" + field);\n  }, _behaviors[_actionTypes.CLEAR_FIELDS] = function (state, _ref16) {\n    var _ref16$meta = _ref16.meta,\n        keepTouched = _ref16$meta.keepTouched,\n        persistentSubmitErrors = _ref16$meta.persistentSubmitErrors,\n        fields = _ref16$meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n\n      if (!persistentSubmitErrors) {\n        result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n      }\n\n      result = deleteInWithCleanUp(result, \"fields.\" + field + \".autofilled\");\n\n      if (!keepTouched) {\n        result = deleteIn(result, \"fields.\" + field + \".touched\");\n      }\n\n      var values = getIn(state, \"initial.\" + field);\n      result = values ? setIn(result, \"values.\" + field, values) : deleteInWithCleanUp(result, \"values.\" + field);\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[_actionTypes.FOCUS] = function (state, _ref17) {\n    var field = _ref17.meta.field;\n    var result = state;\n    var previouslyActive = getIn(state, 'active');\n    result = deleteIn(result, \"fields.\" + previouslyActive + \".active\");\n    result = setIn(result, \"fields.\" + field + \".visited\", true);\n    result = setIn(result, \"fields.\" + field + \".active\", true);\n    result = setIn(result, 'active', field);\n    return result;\n  }, _behaviors[_actionTypes.INITIALIZE] = function (state, _ref18) {\n    var payload = _ref18.payload,\n        _ref18$meta = _ref18.meta,\n        keepDirty = _ref18$meta.keepDirty,\n        keepSubmitSucceeded = _ref18$meta.keepSubmitSucceeded,\n        updateUnregisteredFields = _ref18$meta.updateUnregisteredFields,\n        keepValues = _ref18$meta.keepValues;\n    var mapData = fromJS(payload);\n    var result = empty; // clean all field state\n    // persist old warnings, they will get recalculated if the new form values are different from the old values\n\n    var warning = getIn(state, 'warning');\n\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    }\n\n    var syncWarnings = getIn(state, 'syncWarnings');\n\n    if (syncWarnings) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    } // persist old errors, they will get recalculated if the new form values are different from the old values\n\n\n    var error = getIn(state, 'error');\n\n    if (error) {\n      result = setIn(result, 'error', error);\n    }\n\n    var syncErrors = getIn(state, 'syncErrors');\n\n    if (syncErrors) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    }\n\n    var registeredFields = getIn(state, 'registeredFields');\n\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n\n    var previousValues = getIn(state, 'values');\n    var previousInitialValues = getIn(state, 'initial');\n    var newInitialValues = mapData;\n    var newValues = previousValues;\n\n    if (keepDirty && registeredFields) {\n      if (!deepEqual(newInitialValues, previousInitialValues)) {\n        //\n        // Keep the value of dirty fields while updating the value of\n        // pristine fields. This way, apps can reinitialize forms while\n        // avoiding stomping on user edits.\n        //\n        // Note 1: The initialize action replaces all initial values\n        // regardless of keepDirty.\n        //\n        // Note 2: When a field is dirty, keepDirty is enabled, and the field\n        // value is the same as the new initial value for the field, the\n        // initialize action causes the field to become pristine. That effect\n        // is what we want.\n        //\n        var overwritePristineValue = function overwritePristineValue(name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n          var previousValue = getIn(previousValues, name);\n\n          if (deepEqual(previousValue, previousInitialValue)) {\n            // Overwrite the old pristine value with the new pristine value\n            var newInitialValue = getIn(newInitialValues, name); // This check prevents any 'setIn' call that would create useless\n            // nested objects, since the path to the new field value would\n            // evaluate to the same (especially for undefined values)\n\n            if (getIn(newValues, name) !== newInitialValue) {\n              newValues = setIn(newValues, name, newInitialValue);\n            }\n          }\n        };\n\n        if (!updateUnregisteredFields) {\n          forEach(keys(registeredFields), function (name) {\n            return overwritePristineValue(name);\n          });\n        }\n\n        forEach(keys(newInitialValues), function (name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n\n          if (typeof previousInitialValue === 'undefined') {\n            // Add new values at the root level.\n            var newInitialValue = getIn(newInitialValues, name);\n            newValues = setIn(newValues, name, newInitialValue);\n          }\n\n          if (updateUnregisteredFields) {\n            overwritePristineValue(name);\n          }\n        });\n      }\n    } else {\n      newValues = newInitialValues;\n    }\n\n    if (keepValues) {\n      forEach(keys(previousValues), function (name) {\n        var previousValue = getIn(previousValues, name);\n        newValues = setIn(newValues, name, previousValue);\n      });\n      forEach(keys(previousInitialValues), function (name) {\n        var previousInitialValue = getIn(previousInitialValues, name);\n        newInitialValues = setIn(newInitialValues, name, previousInitialValue);\n      });\n    }\n\n    if (keepSubmitSucceeded && getIn(state, 'submitSucceeded')) {\n      result = setIn(result, 'submitSucceeded', true);\n    }\n\n    result = setIn(result, 'values', newValues);\n    result = setIn(result, 'initial', newInitialValues);\n    return result;\n  }, _behaviors[_actionTypes.REGISTER_FIELD] = function (state, _ref19) {\n    var _ref19$payload = _ref19.payload,\n        name = _ref19$payload.name,\n        type = _ref19$payload.type;\n    var key = \"registeredFields['\" + name + \"']\";\n    var field = getIn(state, key);\n\n    if (field) {\n      var count = getIn(field, 'count') + 1;\n      field = setIn(field, 'count', count);\n    } else {\n      field = fromJS({\n        name: name,\n        type: type,\n        count: 1\n      });\n    }\n\n    return setIn(state, key, field);\n  }, _behaviors[_actionTypes.RESET] = function (state) {\n    var result = empty;\n    var registeredFields = getIn(state, 'registeredFields');\n\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n\n    var values = getIn(state, 'initial');\n\n    if (values) {\n      result = setIn(result, 'values', values);\n      result = setIn(result, 'initial', values);\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.RESET_SECTION] = function (state, _ref20) {\n    var sections = _ref20.meta.sections;\n    var result = state;\n    sections.forEach(function (section) {\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + section);\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + section);\n      result = deleteInWithCleanUp(result, \"fields.\" + section);\n      var values = getIn(state, \"initial.\" + section);\n      result = values ? setIn(result, \"values.\" + section, values) : deleteInWithCleanUp(result, \"values.\" + section);\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[_actionTypes.SUBMIT] = function (state) {\n    return setIn(state, 'triggerSubmit', true);\n  }, _behaviors[_actionTypes.START_ASYNC_VALIDATION] = function (state, _ref21) {\n    var field = _ref21.meta.field;\n    return setIn(state, 'asyncValidating', field || true);\n  }, _behaviors[_actionTypes.START_SUBMIT] = function (state) {\n    return setIn(state, 'submitting', true);\n  }, _behaviors[_actionTypes.STOP_ASYNC_VALIDATION] = function (state, _ref22) {\n    var payload = _ref22.payload;\n    var result = state;\n    result = deleteIn(result, 'asyncValidating');\n\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n          fieldErrors = (0, _objectWithoutPropertiesLoose2[\"default\"])(payload, [\"_error\"]);\n\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      }\n\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'asyncErrors', fromJS(fieldErrors));\n      }\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'asyncErrors');\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.STOP_SUBMIT] = function (state, _ref23) {\n    var payload = _ref23.payload;\n    var result = state;\n    result = deleteIn(result, 'submitting');\n    result = deleteIn(result, 'submitFailed');\n    result = deleteIn(result, 'submitSucceeded');\n\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n          fieldErrors = (0, _objectWithoutPropertiesLoose2[\"default\"])(payload, [\"_error\"]);\n\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      } else {\n        result = deleteIn(result, 'error');\n      }\n\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'submitErrors', fromJS(fieldErrors));\n      } else {\n        result = deleteIn(result, 'submitErrors');\n      }\n\n      result = setIn(result, 'submitFailed', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'submitErrors');\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.SET_SUBMIT_FAILED] = function (state, _ref24) {\n    var fields = _ref24.meta.fields;\n    var result = state;\n    result = setIn(result, 'submitFailed', true);\n    result = deleteIn(result, 'submitSucceeded');\n    result = deleteIn(result, 'submitting');\n    fields.forEach(function (field) {\n      return result = setIn(result, \"fields.\" + field + \".touched\", true);\n    });\n\n    if (fields.length) {\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.SET_SUBMIT_SUCCEEDED] = function (state) {\n    var result = state;\n    result = deleteIn(result, 'submitFailed');\n    result = setIn(result, 'submitSucceeded', true);\n    return result;\n  }, _behaviors[_actionTypes.TOUCH] = function (state, _ref25) {\n    var fields = _ref25.meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      return result = setIn(result, \"fields.\" + field + \".touched\", true);\n    });\n    result = setIn(result, 'anyTouched', true);\n    return result;\n  }, _behaviors[_actionTypes.UNREGISTER_FIELD] = function (state, _ref26) {\n    var _ref26$payload = _ref26.payload,\n        name = _ref26$payload.name,\n        destroyOnUnmount = _ref26$payload.destroyOnUnmount;\n    var result = state;\n    var key = \"registeredFields['\" + name + \"']\";\n    var field = getIn(result, key);\n\n    if (!field) {\n      return result;\n    }\n\n    var count = getIn(field, 'count') - 1;\n\n    if (count <= 0 && destroyOnUnmount) {\n      // Note: Cannot use deleteWithCleanUp here because of the flat nature of registeredFields\n      result = deleteIn(result, key);\n\n      if (deepEqual(getIn(result, 'registeredFields'), empty)) {\n        result = deleteIn(result, 'registeredFields');\n      }\n\n      var syncErrors = getIn(result, 'syncErrors');\n\n      if (syncErrors) {\n        syncErrors = plainDeleteInWithCleanUp(syncErrors, name);\n\n        if (_plain[\"default\"].deepEqual(syncErrors, _plain[\"default\"].empty)) {\n          result = deleteIn(result, 'syncErrors');\n        } else {\n          result = setIn(result, 'syncErrors', syncErrors);\n        }\n      }\n\n      var syncWarnings = getIn(result, 'syncWarnings');\n\n      if (syncWarnings) {\n        syncWarnings = plainDeleteInWithCleanUp(syncWarnings, name);\n\n        if (_plain[\"default\"].deepEqual(syncWarnings, _plain[\"default\"].empty)) {\n          result = deleteIn(result, 'syncWarnings');\n        } else {\n          result = setIn(result, 'syncWarnings', syncWarnings);\n        }\n      }\n\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + name);\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + name);\n    } else {\n      field = setIn(field, 'count', count);\n      result = setIn(result, key, field);\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.UNTOUCH] = function (state, _ref27) {\n    var fields = _ref27.meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      return result = deleteIn(result, \"fields.\" + field + \".touched\");\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[_actionTypes.UPDATE_SYNC_ERRORS] = function (state, _ref28) {\n    var _ref28$payload = _ref28.payload,\n        syncErrors = _ref28$payload.syncErrors,\n        error = _ref28$payload.error;\n    var result = state;\n\n    if (error) {\n      result = setIn(result, 'error', error);\n      result = setIn(result, 'syncError', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'syncError');\n    }\n\n    if (Object.keys(syncErrors).length) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    } else {\n      result = deleteIn(result, 'syncErrors');\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.UPDATE_SYNC_WARNINGS] = function (state, _ref29) {\n    var _ref29$payload = _ref29.payload,\n        syncWarnings = _ref29$payload.syncWarnings,\n        warning = _ref29$payload.warning;\n    var result = state;\n\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    } else {\n      result = deleteIn(result, 'warning');\n    }\n\n    if (Object.keys(syncWarnings).length) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    } else {\n      result = deleteIn(result, 'syncWarnings');\n    }\n\n    return result;\n  }, _behaviors);\n\n  var reducer = function reducer(state, action) {\n    if (state === void 0) {\n      state = empty;\n    }\n\n    var behavior = behaviors[action.type];\n    return behavior ? behavior(state, action) : state;\n  };\n\n  var byForm = function byForm(reducer) {\n    return function (state, action) {\n      if (state === void 0) {\n        state = empty;\n      }\n\n      if (action === void 0) {\n        action = {\n          type: 'NONE'\n        };\n      }\n\n      var form = action && action.meta && action.meta.form;\n\n      if (!form || !isReduxFormAction(action)) {\n        return state;\n      }\n\n      if (action.type === _actionTypes.DESTROY && action.meta && action.meta.form) {\n        return action.meta.form.reduce(function (result, form) {\n          return deleteInWithCleanUp(result, form);\n        }, state);\n      }\n\n      var formState = getIn(state, form);\n      var result = reducer(formState, action);\n      return result === formState ? state : setIn(state, form, result);\n    };\n  };\n  /**\n   * Adds additional functionality to the reducer\n   */\n\n\n  function decorate(target) {\n    target.plugin = function (reducers, config) {\n      var _this = this;\n\n      if (config === void 0) {\n        config = {};\n      } // use 'function' keyword to enable 'this'\n\n\n      return decorate(function (state, action) {\n        if (state === void 0) {\n          state = empty;\n        }\n\n        if (action === void 0) {\n          action = {\n            type: 'NONE'\n          };\n        }\n\n        var callPlugin = function callPlugin(processed, key) {\n          var previousState = getIn(processed, key);\n          var nextState = reducers[key](previousState, action, getIn(state, key));\n          return nextState !== previousState ? setIn(processed, key, nextState) : processed;\n        };\n\n        var processed = _this(state, action); // run through redux-form reducer\n\n\n        var form = action && action.meta && action.meta.form;\n\n        if (form && !config.receiveAllFormActions) {\n          // this is an action aimed at forms, so only give it to the specified form's plugin\n          return reducers[form] ? callPlugin(processed, form) : processed;\n        } else {\n          // this is not a form-specific action, so send it to all the plugins\n          return Object.keys(reducers).reduce(callPlugin, processed);\n        }\n      });\n    };\n\n    return target;\n  }\n\n  return decorate(byForm(reducer));\n}\n\nvar _default = createReducer;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/node_modules/redux-form/lib/createReducer.js"],"names":["_interopRequireDefault","require","exports","__esModule","_objectWithoutPropertiesLoose2","_isFunction2","_actionTypes","_deleteInWithCleanUp","_plain","shouldDelete","_ref","getIn","state","path","initialValuesPath","test","replace","initialValueComparison","undefined","isReduxFormAction","action","type","length","prefix","substring","createReducer","structure","_behaviors","deepEqual","empty","forEach","setIn","deleteIn","fromJS","keys","size","some","splice","deleteInWithCleanUp","plainDeleteInWithCleanUp","doSplice","key","field","index","removeNum","value","force","existing","doPlainSplice","slice","rootKeys","arraySplice","result","nonValuesValue","behaviors","ARRAY_INSERT","_ref2","_ref2$meta","meta","payload","ARRAY_MOVE","_ref3","_ref3$meta","from","to","array","ARRAY_POP","_ref4","ARRAY_PUSH","_ref5","ARRAY_REMOVE","_ref6","_ref6$meta","ARRAY_REMOVE_ALL","_ref7","ARRAY_SHIFT","_ref8","ARRAY_SPLICE","_ref9","_ref9$meta","ARRAY_SWAP","_ref10","_ref10$meta","indexA","indexB","valueA","valueB","ARRAY_UNSHIFT","_ref11","AUTOFILL","_ref12","BLUR","_ref13","_ref13$meta","touch","initial","CHANGE","_ref14","_ref14$meta","persistentSubmitErrors","fieldCurrentValue","values","CLEAR_SUBMIT","CLEAR_SUBMIT_ERRORS","CLEAR_ASYNC_ERROR","_ref15","CLEAR_FIELDS","_ref16","_ref16$meta","keepTouched","fields","anyTouched","FOCUS","_ref17","previouslyActive","INITIALIZE","_ref18","_ref18$meta","keepDirty","keepSubmitSucceeded","updateUnregisteredFields","keepValues","mapData","warning","syncWarnings","error","syncErrors","registeredFields","previousValues","previousInitialValues","newInitialValues","newValues","overwritePristineValue","name","previousInitialValue","previousValue","newInitialValue","REGISTER_FIELD","_ref19","_ref19$payload","count","RESET","RESET_SECTION","_ref20","sections","section","SUBMIT","START_ASYNC_VALIDATION","_ref21","START_SUBMIT","STOP_ASYNC_VALIDATION","_ref22","Object","_error","fieldErrors","STOP_SUBMIT","_ref23","SET_SUBMIT_FAILED","_ref24","SET_SUBMIT_SUCCEEDED","TOUCH","_ref25","UNREGISTER_FIELD","_ref26","_ref26$payload","destroyOnUnmount","UNTOUCH","_ref27","UPDATE_SYNC_ERRORS","_ref28","_ref28$payload","UPDATE_SYNC_WARNINGS","_ref29","_ref29$payload","reducer","behavior","byForm","form","DESTROY","reduce","formState","decorate","target","plugin","reducers","config","_this","callPlugin","processed","previousState","nextState","receiveAllFormActions","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _actionTypes = require(\"./actionTypes\");\n\nvar _deleteInWithCleanUp = _interopRequireDefault(require(\"./deleteInWithCleanUp\"));\n\nvar _plain = _interopRequireDefault(require(\"./structure/plain\"));\n\nvar shouldDelete = function shouldDelete(_ref) {\n  var getIn = _ref.getIn;\n  return function (state, path) {\n    var initialValuesPath = null;\n\n    if (/^values/.test(path)) {\n      initialValuesPath = path.replace('values', 'initial');\n    }\n\n    var initialValueComparison = initialValuesPath ? getIn(state, initialValuesPath) === undefined : true;\n    return getIn(state, path) !== undefined && initialValueComparison;\n  };\n};\n\nvar isReduxFormAction = function isReduxFormAction(action) {\n  return action && action.type && action.type.length > _actionTypes.prefix.length && action.type.substring(0, _actionTypes.prefix.length) === _actionTypes.prefix;\n};\n\nfunction createReducer(structure) {\n  var _behaviors;\n\n  var deepEqual = structure.deepEqual,\n      empty = structure.empty,\n      forEach = structure.forEach,\n      getIn = structure.getIn,\n      setIn = structure.setIn,\n      deleteIn = structure.deleteIn,\n      fromJS = structure.fromJS,\n      keys = structure.keys,\n      size = structure.size,\n      some = structure.some,\n      splice = structure.splice;\n  var deleteInWithCleanUp = (0, _deleteInWithCleanUp[\"default\"])(structure)(shouldDelete);\n  var plainDeleteInWithCleanUp = (0, _deleteInWithCleanUp[\"default\"])(_plain[\"default\"])(shouldDelete);\n\n  var doSplice = function doSplice(state, key, field, index, removeNum, value, force) {\n    var existing = getIn(state, key + \".\" + field);\n    return existing || force ? setIn(state, key + \".\" + field, splice(existing, index, removeNum, value)) : state;\n  };\n\n  var doPlainSplice = function doPlainSplice(state, key, field, index, removeNum, value, force) {\n    var slice = getIn(state, key);\n\n    var existing = _plain[\"default\"].getIn(slice, field);\n\n    return existing || force ? setIn(state, key, _plain[\"default\"].setIn(slice, field, _plain[\"default\"].splice(existing, index, removeNum, value))) : state;\n  };\n\n  var rootKeys = ['values', 'fields', 'submitErrors', 'asyncErrors'];\n\n  var arraySplice = function arraySplice(state, field, index, removeNum, value) {\n    var result = state;\n    var nonValuesValue = value != null ? empty : undefined;\n    result = doSplice(result, 'values', field, index, removeNum, value, true);\n    result = doSplice(result, 'fields', field, index, removeNum, nonValuesValue);\n    result = doPlainSplice(result, 'syncErrors', field, index, removeNum, undefined);\n    result = doPlainSplice(result, 'syncWarnings', field, index, removeNum, undefined);\n    result = doSplice(result, 'submitErrors', field, index, removeNum, undefined);\n    result = doSplice(result, 'asyncErrors', field, index, removeNum, undefined);\n    return result;\n  };\n\n  var behaviors = (_behaviors = {}, _behaviors[_actionTypes.ARRAY_INSERT] = function (state, _ref2) {\n    var _ref2$meta = _ref2.meta,\n        field = _ref2$meta.field,\n        index = _ref2$meta.index,\n        payload = _ref2.payload;\n    return arraySplice(state, field, index, 0, payload);\n  }, _behaviors[_actionTypes.ARRAY_MOVE] = function (state, _ref3) {\n    var _ref3$meta = _ref3.meta,\n        field = _ref3$meta.field,\n        from = _ref3$meta.from,\n        to = _ref3$meta.to;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    var result = state;\n\n    if (length) {\n      rootKeys.forEach(function (key) {\n        var path = key + \".\" + field;\n\n        if (getIn(result, path)) {\n          var value = getIn(result, path + \"[\" + from + \"]\");\n          result = setIn(result, path, splice(getIn(result, path), from, 1)); // remove\n\n          result = setIn(result, path, splice(getIn(result, path), to, 0, value)); // insert\n        }\n      });\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.ARRAY_POP] = function (state, _ref4) {\n    var field = _ref4.meta.field;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, length - 1, 1) : state;\n  }, _behaviors[_actionTypes.ARRAY_PUSH] = function (state, _ref5) {\n    var field = _ref5.meta.field,\n        payload = _ref5.payload;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return arraySplice(state, field, length, 0, payload);\n  }, _behaviors[_actionTypes.ARRAY_REMOVE] = function (state, _ref6) {\n    var _ref6$meta = _ref6.meta,\n        field = _ref6$meta.field,\n        index = _ref6$meta.index;\n    return arraySplice(state, field, index, 1);\n  }, _behaviors[_actionTypes.ARRAY_REMOVE_ALL] = function (state, _ref7) {\n    var field = _ref7.meta.field;\n    var array = getIn(state, \"values.\" + field);\n    var length = array ? size(array) : 0;\n    return length ? arraySplice(state, field, 0, length) : state;\n  }, _behaviors[_actionTypes.ARRAY_SHIFT] = function (state, _ref8) {\n    var field = _ref8.meta.field;\n    return arraySplice(state, field, 0, 1);\n  }, _behaviors[_actionTypes.ARRAY_SPLICE] = function (state, _ref9) {\n    var _ref9$meta = _ref9.meta,\n        field = _ref9$meta.field,\n        index = _ref9$meta.index,\n        removeNum = _ref9$meta.removeNum,\n        payload = _ref9.payload;\n    return arraySplice(state, field, index, removeNum, payload);\n  }, _behaviors[_actionTypes.ARRAY_SWAP] = function (state, _ref10) {\n    var _ref10$meta = _ref10.meta,\n        field = _ref10$meta.field,\n        indexA = _ref10$meta.indexA,\n        indexB = _ref10$meta.indexB;\n    var result = state;\n    rootKeys.forEach(function (key) {\n      var valueA = getIn(result, key + \".\" + field + \"[\" + indexA + \"]\");\n      var valueB = getIn(result, key + \".\" + field + \"[\" + indexB + \"]\");\n\n      if (valueA !== undefined || valueB !== undefined) {\n        result = setIn(result, key + \".\" + field + \"[\" + indexA + \"]\", valueB);\n        result = setIn(result, key + \".\" + field + \"[\" + indexB + \"]\", valueA);\n      }\n    });\n    return result;\n  }, _behaviors[_actionTypes.ARRAY_UNSHIFT] = function (state, _ref11) {\n    var field = _ref11.meta.field,\n        payload = _ref11.payload;\n    return arraySplice(state, field, 0, 0, payload);\n  }, _behaviors[_actionTypes.AUTOFILL] = function (state, _ref12) {\n    var field = _ref12.meta.field,\n        payload = _ref12.payload;\n    var result = state;\n    result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n    result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n    result = setIn(result, \"fields.\" + field + \".autofilled\", true);\n    result = setIn(result, \"values.\" + field, payload);\n    return result;\n  }, _behaviors[_actionTypes.BLUR] = function (state, _ref13) {\n    var _ref13$meta = _ref13.meta,\n        field = _ref13$meta.field,\n        touch = _ref13$meta.touch,\n        payload = _ref13.payload;\n    var result = state;\n    var initial = getIn(result, \"initial.\" + field);\n\n    if (initial === undefined && payload === '') {\n      result = deleteInWithCleanUp(result, \"values.\" + field);\n    } else if (payload !== undefined) {\n      result = setIn(result, \"values.\" + field, payload);\n    }\n\n    if (field === getIn(result, 'active')) {\n      result = deleteIn(result, 'active');\n    }\n\n    result = deleteIn(result, \"fields.\" + field + \".active\");\n\n    if (touch) {\n      result = setIn(result, \"fields.\" + field + \".touched\", true);\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.CHANGE] = function (state, _ref14) {\n    var _ref14$meta = _ref14.meta,\n        field = _ref14$meta.field,\n        touch = _ref14$meta.touch,\n        persistentSubmitErrors = _ref14$meta.persistentSubmitErrors,\n        payload = _ref14.payload;\n    var result = state;\n    var initial = getIn(result, \"initial.\" + field);\n\n    if (initial === undefined && payload === '' || payload === undefined) {\n      result = deleteInWithCleanUp(result, \"values.\" + field);\n    } else if ((0, _isFunction2[\"default\"])(payload)) {\n      var fieldCurrentValue = getIn(state, \"values.\" + field);\n      result = setIn(result, \"values.\" + field, payload(fieldCurrentValue, state.values));\n    } else {\n      result = setIn(result, \"values.\" + field, payload);\n    }\n\n    result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n\n    if (!persistentSubmitErrors) {\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n    }\n\n    result = deleteInWithCleanUp(result, \"fields.\" + field + \".autofilled\");\n\n    if (touch) {\n      result = setIn(result, \"fields.\" + field + \".touched\", true);\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.CLEAR_SUBMIT] = function (state) {\n    return deleteIn(state, 'triggerSubmit');\n  }, _behaviors[_actionTypes.CLEAR_SUBMIT_ERRORS] = function (state) {\n    var result = state;\n    result = deleteInWithCleanUp(result, 'submitErrors');\n    result = deleteIn(result, 'error');\n    return result;\n  }, _behaviors[_actionTypes.CLEAR_ASYNC_ERROR] = function (state, _ref15) {\n    var field = _ref15.meta.field;\n    return deleteIn(state, \"asyncErrors.\" + field);\n  }, _behaviors[_actionTypes.CLEAR_FIELDS] = function (state, _ref16) {\n    var _ref16$meta = _ref16.meta,\n        keepTouched = _ref16$meta.keepTouched,\n        persistentSubmitErrors = _ref16$meta.persistentSubmitErrors,\n        fields = _ref16$meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + field);\n\n      if (!persistentSubmitErrors) {\n        result = deleteInWithCleanUp(result, \"submitErrors.\" + field);\n      }\n\n      result = deleteInWithCleanUp(result, \"fields.\" + field + \".autofilled\");\n\n      if (!keepTouched) {\n        result = deleteIn(result, \"fields.\" + field + \".touched\");\n      }\n\n      var values = getIn(state, \"initial.\" + field);\n      result = values ? setIn(result, \"values.\" + field, values) : deleteInWithCleanUp(result, \"values.\" + field);\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[_actionTypes.FOCUS] = function (state, _ref17) {\n    var field = _ref17.meta.field;\n    var result = state;\n    var previouslyActive = getIn(state, 'active');\n    result = deleteIn(result, \"fields.\" + previouslyActive + \".active\");\n    result = setIn(result, \"fields.\" + field + \".visited\", true);\n    result = setIn(result, \"fields.\" + field + \".active\", true);\n    result = setIn(result, 'active', field);\n    return result;\n  }, _behaviors[_actionTypes.INITIALIZE] = function (state, _ref18) {\n    var payload = _ref18.payload,\n        _ref18$meta = _ref18.meta,\n        keepDirty = _ref18$meta.keepDirty,\n        keepSubmitSucceeded = _ref18$meta.keepSubmitSucceeded,\n        updateUnregisteredFields = _ref18$meta.updateUnregisteredFields,\n        keepValues = _ref18$meta.keepValues;\n    var mapData = fromJS(payload);\n    var result = empty; // clean all field state\n    // persist old warnings, they will get recalculated if the new form values are different from the old values\n\n    var warning = getIn(state, 'warning');\n\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    }\n\n    var syncWarnings = getIn(state, 'syncWarnings');\n\n    if (syncWarnings) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    } // persist old errors, they will get recalculated if the new form values are different from the old values\n\n\n    var error = getIn(state, 'error');\n\n    if (error) {\n      result = setIn(result, 'error', error);\n    }\n\n    var syncErrors = getIn(state, 'syncErrors');\n\n    if (syncErrors) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    }\n\n    var registeredFields = getIn(state, 'registeredFields');\n\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n\n    var previousValues = getIn(state, 'values');\n    var previousInitialValues = getIn(state, 'initial');\n    var newInitialValues = mapData;\n    var newValues = previousValues;\n\n    if (keepDirty && registeredFields) {\n      if (!deepEqual(newInitialValues, previousInitialValues)) {\n        //\n        // Keep the value of dirty fields while updating the value of\n        // pristine fields. This way, apps can reinitialize forms while\n        // avoiding stomping on user edits.\n        //\n        // Note 1: The initialize action replaces all initial values\n        // regardless of keepDirty.\n        //\n        // Note 2: When a field is dirty, keepDirty is enabled, and the field\n        // value is the same as the new initial value for the field, the\n        // initialize action causes the field to become pristine. That effect\n        // is what we want.\n        //\n        var overwritePristineValue = function overwritePristineValue(name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n          var previousValue = getIn(previousValues, name);\n\n          if (deepEqual(previousValue, previousInitialValue)) {\n            // Overwrite the old pristine value with the new pristine value\n            var newInitialValue = getIn(newInitialValues, name); // This check prevents any 'setIn' call that would create useless\n            // nested objects, since the path to the new field value would\n            // evaluate to the same (especially for undefined values)\n\n            if (getIn(newValues, name) !== newInitialValue) {\n              newValues = setIn(newValues, name, newInitialValue);\n            }\n          }\n        };\n\n        if (!updateUnregisteredFields) {\n          forEach(keys(registeredFields), function (name) {\n            return overwritePristineValue(name);\n          });\n        }\n\n        forEach(keys(newInitialValues), function (name) {\n          var previousInitialValue = getIn(previousInitialValues, name);\n\n          if (typeof previousInitialValue === 'undefined') {\n            // Add new values at the root level.\n            var newInitialValue = getIn(newInitialValues, name);\n            newValues = setIn(newValues, name, newInitialValue);\n          }\n\n          if (updateUnregisteredFields) {\n            overwritePristineValue(name);\n          }\n        });\n      }\n    } else {\n      newValues = newInitialValues;\n    }\n\n    if (keepValues) {\n      forEach(keys(previousValues), function (name) {\n        var previousValue = getIn(previousValues, name);\n        newValues = setIn(newValues, name, previousValue);\n      });\n      forEach(keys(previousInitialValues), function (name) {\n        var previousInitialValue = getIn(previousInitialValues, name);\n        newInitialValues = setIn(newInitialValues, name, previousInitialValue);\n      });\n    }\n\n    if (keepSubmitSucceeded && getIn(state, 'submitSucceeded')) {\n      result = setIn(result, 'submitSucceeded', true);\n    }\n\n    result = setIn(result, 'values', newValues);\n    result = setIn(result, 'initial', newInitialValues);\n    return result;\n  }, _behaviors[_actionTypes.REGISTER_FIELD] = function (state, _ref19) {\n    var _ref19$payload = _ref19.payload,\n        name = _ref19$payload.name,\n        type = _ref19$payload.type;\n    var key = \"registeredFields['\" + name + \"']\";\n    var field = getIn(state, key);\n\n    if (field) {\n      var count = getIn(field, 'count') + 1;\n      field = setIn(field, 'count', count);\n    } else {\n      field = fromJS({\n        name: name,\n        type: type,\n        count: 1\n      });\n    }\n\n    return setIn(state, key, field);\n  }, _behaviors[_actionTypes.RESET] = function (state) {\n    var result = empty;\n    var registeredFields = getIn(state, 'registeredFields');\n\n    if (registeredFields) {\n      result = setIn(result, 'registeredFields', registeredFields);\n    }\n\n    var values = getIn(state, 'initial');\n\n    if (values) {\n      result = setIn(result, 'values', values);\n      result = setIn(result, 'initial', values);\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.RESET_SECTION] = function (state, _ref20) {\n    var sections = _ref20.meta.sections;\n    var result = state;\n    sections.forEach(function (section) {\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + section);\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + section);\n      result = deleteInWithCleanUp(result, \"fields.\" + section);\n      var values = getIn(state, \"initial.\" + section);\n      result = values ? setIn(result, \"values.\" + section, values) : deleteInWithCleanUp(result, \"values.\" + section);\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[_actionTypes.SUBMIT] = function (state) {\n    return setIn(state, 'triggerSubmit', true);\n  }, _behaviors[_actionTypes.START_ASYNC_VALIDATION] = function (state, _ref21) {\n    var field = _ref21.meta.field;\n    return setIn(state, 'asyncValidating', field || true);\n  }, _behaviors[_actionTypes.START_SUBMIT] = function (state) {\n    return setIn(state, 'submitting', true);\n  }, _behaviors[_actionTypes.STOP_ASYNC_VALIDATION] = function (state, _ref22) {\n    var payload = _ref22.payload;\n    var result = state;\n    result = deleteIn(result, 'asyncValidating');\n\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n          fieldErrors = (0, _objectWithoutPropertiesLoose2[\"default\"])(payload, [\"_error\"]);\n\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      }\n\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'asyncErrors', fromJS(fieldErrors));\n      }\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'asyncErrors');\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.STOP_SUBMIT] = function (state, _ref23) {\n    var payload = _ref23.payload;\n    var result = state;\n    result = deleteIn(result, 'submitting');\n    result = deleteIn(result, 'submitFailed');\n    result = deleteIn(result, 'submitSucceeded');\n\n    if (payload && Object.keys(payload).length) {\n      var _error = payload._error,\n          fieldErrors = (0, _objectWithoutPropertiesLoose2[\"default\"])(payload, [\"_error\"]);\n\n      if (_error) {\n        result = setIn(result, 'error', _error);\n      } else {\n        result = deleteIn(result, 'error');\n      }\n\n      if (Object.keys(fieldErrors).length) {\n        result = setIn(result, 'submitErrors', fromJS(fieldErrors));\n      } else {\n        result = deleteIn(result, 'submitErrors');\n      }\n\n      result = setIn(result, 'submitFailed', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'submitErrors');\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.SET_SUBMIT_FAILED] = function (state, _ref24) {\n    var fields = _ref24.meta.fields;\n    var result = state;\n    result = setIn(result, 'submitFailed', true);\n    result = deleteIn(result, 'submitSucceeded');\n    result = deleteIn(result, 'submitting');\n    fields.forEach(function (field) {\n      return result = setIn(result, \"fields.\" + field + \".touched\", true);\n    });\n\n    if (fields.length) {\n      result = setIn(result, 'anyTouched', true);\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.SET_SUBMIT_SUCCEEDED] = function (state) {\n    var result = state;\n    result = deleteIn(result, 'submitFailed');\n    result = setIn(result, 'submitSucceeded', true);\n    return result;\n  }, _behaviors[_actionTypes.TOUCH] = function (state, _ref25) {\n    var fields = _ref25.meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      return result = setIn(result, \"fields.\" + field + \".touched\", true);\n    });\n    result = setIn(result, 'anyTouched', true);\n    return result;\n  }, _behaviors[_actionTypes.UNREGISTER_FIELD] = function (state, _ref26) {\n    var _ref26$payload = _ref26.payload,\n        name = _ref26$payload.name,\n        destroyOnUnmount = _ref26$payload.destroyOnUnmount;\n    var result = state;\n    var key = \"registeredFields['\" + name + \"']\";\n    var field = getIn(result, key);\n\n    if (!field) {\n      return result;\n    }\n\n    var count = getIn(field, 'count') - 1;\n\n    if (count <= 0 && destroyOnUnmount) {\n      // Note: Cannot use deleteWithCleanUp here because of the flat nature of registeredFields\n      result = deleteIn(result, key);\n\n      if (deepEqual(getIn(result, 'registeredFields'), empty)) {\n        result = deleteIn(result, 'registeredFields');\n      }\n\n      var syncErrors = getIn(result, 'syncErrors');\n\n      if (syncErrors) {\n        syncErrors = plainDeleteInWithCleanUp(syncErrors, name);\n\n        if (_plain[\"default\"].deepEqual(syncErrors, _plain[\"default\"].empty)) {\n          result = deleteIn(result, 'syncErrors');\n        } else {\n          result = setIn(result, 'syncErrors', syncErrors);\n        }\n      }\n\n      var syncWarnings = getIn(result, 'syncWarnings');\n\n      if (syncWarnings) {\n        syncWarnings = plainDeleteInWithCleanUp(syncWarnings, name);\n\n        if (_plain[\"default\"].deepEqual(syncWarnings, _plain[\"default\"].empty)) {\n          result = deleteIn(result, 'syncWarnings');\n        } else {\n          result = setIn(result, 'syncWarnings', syncWarnings);\n        }\n      }\n\n      result = deleteInWithCleanUp(result, \"submitErrors.\" + name);\n      result = deleteInWithCleanUp(result, \"asyncErrors.\" + name);\n    } else {\n      field = setIn(field, 'count', count);\n      result = setIn(result, key, field);\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.UNTOUCH] = function (state, _ref27) {\n    var fields = _ref27.meta.fields;\n    var result = state;\n    fields.forEach(function (field) {\n      return result = deleteIn(result, \"fields.\" + field + \".touched\");\n    });\n    var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {\n      return getIn(result, \"fields.\" + key + \".touched\");\n    });\n    result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');\n    return result;\n  }, _behaviors[_actionTypes.UPDATE_SYNC_ERRORS] = function (state, _ref28) {\n    var _ref28$payload = _ref28.payload,\n        syncErrors = _ref28$payload.syncErrors,\n        error = _ref28$payload.error;\n    var result = state;\n\n    if (error) {\n      result = setIn(result, 'error', error);\n      result = setIn(result, 'syncError', true);\n    } else {\n      result = deleteIn(result, 'error');\n      result = deleteIn(result, 'syncError');\n    }\n\n    if (Object.keys(syncErrors).length) {\n      result = setIn(result, 'syncErrors', syncErrors);\n    } else {\n      result = deleteIn(result, 'syncErrors');\n    }\n\n    return result;\n  }, _behaviors[_actionTypes.UPDATE_SYNC_WARNINGS] = function (state, _ref29) {\n    var _ref29$payload = _ref29.payload,\n        syncWarnings = _ref29$payload.syncWarnings,\n        warning = _ref29$payload.warning;\n    var result = state;\n\n    if (warning) {\n      result = setIn(result, 'warning', warning);\n    } else {\n      result = deleteIn(result, 'warning');\n    }\n\n    if (Object.keys(syncWarnings).length) {\n      result = setIn(result, 'syncWarnings', syncWarnings);\n    } else {\n      result = deleteIn(result, 'syncWarnings');\n    }\n\n    return result;\n  }, _behaviors);\n\n  var reducer = function reducer(state, action) {\n    if (state === void 0) {\n      state = empty;\n    }\n\n    var behavior = behaviors[action.type];\n    return behavior ? behavior(state, action) : state;\n  };\n\n  var byForm = function byForm(reducer) {\n    return function (state, action) {\n      if (state === void 0) {\n        state = empty;\n      }\n\n      if (action === void 0) {\n        action = {\n          type: 'NONE'\n        };\n      }\n\n      var form = action && action.meta && action.meta.form;\n\n      if (!form || !isReduxFormAction(action)) {\n        return state;\n      }\n\n      if (action.type === _actionTypes.DESTROY && action.meta && action.meta.form) {\n        return action.meta.form.reduce(function (result, form) {\n          return deleteInWithCleanUp(result, form);\n        }, state);\n      }\n\n      var formState = getIn(state, form);\n      var result = reducer(formState, action);\n      return result === formState ? state : setIn(state, form, result);\n    };\n  };\n  /**\n   * Adds additional functionality to the reducer\n   */\n\n\n  function decorate(target) {\n    target.plugin = function (reducers, config) {\n      var _this = this;\n\n      if (config === void 0) {\n        config = {};\n      }\n\n      // use 'function' keyword to enable 'this'\n      return decorate(function (state, action) {\n        if (state === void 0) {\n          state = empty;\n        }\n\n        if (action === void 0) {\n          action = {\n            type: 'NONE'\n          };\n        }\n\n        var callPlugin = function callPlugin(processed, key) {\n          var previousState = getIn(processed, key);\n          var nextState = reducers[key](previousState, action, getIn(state, key));\n          return nextState !== previousState ? setIn(processed, key, nextState) : processed;\n        };\n\n        var processed = _this(state, action); // run through redux-form reducer\n\n\n        var form = action && action.meta && action.meta.form;\n\n        if (form && !config.receiveAllFormActions) {\n          // this is an action aimed at forms, so only give it to the specified form's plugin\n          return reducers[form] ? callPlugin(processed, form) : processed;\n        } else {\n          // this is not a form-specific action, so send it to all the plugins\n          return Object.keys(reducers).reduce(callPlugin, processed);\n        }\n      });\n    };\n\n    return target;\n  }\n\n  return decorate(byForm(reducer));\n}\n\nvar _default = createReducer;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}