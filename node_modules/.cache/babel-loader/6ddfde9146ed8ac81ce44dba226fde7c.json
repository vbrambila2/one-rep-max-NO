{"ast":null,"code":"import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT } from '../actions/constants.js';\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_MOVEMENT:\n      return [...state, action.payload];\n\n    case UPDATE_MOVEMENT:\n      console.log(action.payload, \"reducer\"); // return {\n      //     ...state, [action.payload.id]: action.payload\n      // };\n      // return state.map(item => {\n      //     if (item.id === action.payload.id) {\n      //         return action.payload.data\n      //     } else {\n      //         return item\n      //     }\n      // })\n\n      return [...state.map(item => item.id === action.payload.id ? { ...item,\n        movementWeight: action.payload.movementWeight\n      } : item)];\n    // const clonedMovement = state;\n    // const movementIndexToUpdate = clonedMovement.findIndex(\n    //   (item) => item.id === action.payload.id\n    // );\n    // const updatedMovement = {\n    //   ...clonedMovement[movementIndexToUpdate],\n    //   movementWeight: action.payload.movementWeight,\n    // };\n    // const updatedMovements = [...clonedMovement];\n    // updatedMovements[movementIndexToUpdate] = updatedMovement;\n    // return [...updatedMovements];\n\n    case DELETE_MOVEMENT:\n      return [...state.filter(item => item.movementName !== action.payload.movementName)];\n\n    default:\n      return state;\n  }\n};\n\nexport default movementReducer;","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/src/reducers/movementReducer.js"],"names":["UPDATE_MOVEMENT","DELETE_MOVEMENT","CREATE_MOVEMENT","initialState","movementReducer","state","action","type","payload","console","log","map","item","id","movementWeight","filter","movementName"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,eAA3C,QAAkE,yBAAlE;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,eAAL;AACI,aAAO,CACH,GAAGG,KADA,EACOC,MAAM,CAACE,OADd,CAAP;;AAGJ,SAAKR,eAAL;AACIS,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB,EAA4B,SAA5B,EADJ,CAGI;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAO,CAAE,GAAGH,KAAK,CAACM,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACE,OAAP,CAAeK,EAA3B,GAAgC,EAAC,GAAGD,IAAJ;AAAUE,QAAAA,cAAc,EAAER,MAAM,CAACE,OAAP,CAAeM;AAAzC,OAAhC,GAA2FF,IAA7G,CAAL,CAAP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGJ,SAAKX,eAAL;AACI,aAAO,CACH,GAAGI,KAAK,CAACU,MAAN,CAAaH,IAAI,IAAIA,IAAI,CAACI,YAAL,KAAsBV,MAAM,CAACE,OAAP,CAAeQ,YAA1D,CADA,CAAP;;AAGJ;AACI,aAAOX,KAAP;AAxCR;AA0CH,CA3CD;;AA6CA,eAAeD,eAAf","sourcesContent":["import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT } from '../actions/constants.js';\n\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_MOVEMENT: \n            return [\n                ...state, action.payload\n            ];\n        case UPDATE_MOVEMENT:\n            console.log(action.payload, \"reducer\")\n\n            // return {\n            //     ...state, [action.payload.id]: action.payload\n            // };\n\n            // return state.map(item => {\n            //     if (item.id === action.payload.id) {\n            //         return action.payload.data\n            //     } else {\n            //         return item\n            //     }\n            // })\n\n            return [ ...state.map(item => item.id === action.payload.id ? {...item, movementWeight: action.payload.movementWeight} : item)];\n\n            // const clonedMovement = state;\n            // const movementIndexToUpdate = clonedMovement.findIndex(\n            //   (item) => item.id === action.payload.id\n            // );\n            // const updatedMovement = {\n            //   ...clonedMovement[movementIndexToUpdate],\n            //   movementWeight: action.payload.movementWeight,\n            // };\n            // const updatedMovements = [...clonedMovement];\n            // updatedMovements[movementIndexToUpdate] = updatedMovement;\n            // return [...updatedMovements];\n             \n            \n        case DELETE_MOVEMENT:\n            return [\n                ...state.filter(item => item.movementName !== action.payload.movementName)\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default movementReducer;"]},"metadata":{},"sourceType":"module"}