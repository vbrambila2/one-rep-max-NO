{"ast":null,"code":"import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT } from '../actions/constants.js';\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_MOVEMENT:\n      return [...state, action.payload];\n\n    case UPDATE_MOVEMENT:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n    // return state.map(item => {\n    //     if (item.id === action.payload.id) {\n    //         return action.payload\n    //     } else {\n    //         return item\n    //     }\n    // })\n    // state.map(item => item.id === action.payload.id ? item : action.payload )\n\n    case DELETE_MOVEMENT:\n      return [...state.filter(item => item.movementName !== action.payload.movementName)];\n\n    default:\n      return state;\n  }\n};\n\nexport default movementReducer;","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/src/reducers/movementReducer.js"],"names":["UPDATE_MOVEMENT","DELETE_MOVEMENT","CREATE_MOVEMENT","initialState","movementReducer","state","action","type","payload","id","filter","item","movementName"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,eAA3C,QAAkE,yBAAlE;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,eAAL;AACI,aAAO,CACH,GAAGG,KADA,EACOC,MAAM,CAACE,OADd,CAAP;;AAGJ,SAAKR,eAAL;AACI,aAAO,EACH,GAAGK,KADA;AACO,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AADnC,OAAP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;;AAER,SAAKP,eAAL;AACI,aAAO,CACH,GAAGI,KAAK,CAACK,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,YAAL,KAAsBN,MAAM,CAACE,OAAP,CAAeI,YAA1D,CADA,CAAP;;AAGJ;AACI,aAAOP,KAAP;AAxBR;AA0BH,CA3BD;;AA6BA,eAAeD,eAAf","sourcesContent":["import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT } from '../actions/constants.js';\n\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_MOVEMENT: \n            return [ \n                ...state, action.payload\n            ];\n        case UPDATE_MOVEMENT:\n            return {\n                ...state, [action.payload.id]: action.payload\n            }\n            // return state.map(item => {\n            //     if (item.id === action.payload.id) {\n            //         return action.payload\n            //     } else {\n            //         return item\n            //     }\n            // })\n\n                // state.map(item => item.id === action.payload.id ? item : action.payload )\n            \n        case DELETE_MOVEMENT:\n            return [\n                ...state.filter(item => item.movementName !== action.payload.movementName)\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default movementReducer;"]},"metadata":{},"sourceType":"module"}