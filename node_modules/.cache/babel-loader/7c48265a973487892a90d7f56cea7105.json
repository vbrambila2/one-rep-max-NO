{"ast":null,"code":"import _toConsumableArray from\"/Users/victorbrambila/one-rep-max/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{ADD_MOVEMENT,UPDATE_MOVEMENT,DELETE_MOVEMENT}from'../actions/constants.js';var initialState=[];var movementReducer=function movementReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD_MOVEMENT:return[].concat(_toConsumableArray(state),[action.payload]);case UPDATE_MOVEMENT:return _toConsumableArray(state.map(function(item){return item.movementName===action.payload.movementName?action.payload:item;}));case DELETE_MOVEMENT:return _toConsumableArray(state.filter(function(item){return item.movementName!==action.payload.movementName;}));default:return state;}};export default movementReducer;","map":{"version":3,"sources":["/Users/victorbrambila/one-rep-max/src/reducers/movementReducer.js"],"names":["ADD_MOVEMENT","UPDATE_MOVEMENT","DELETE_MOVEMENT","initialState","movementReducer","state","action","type","payload","map","item","movementName","filter"],"mappings":"4HAAA,OAASA,YAAT,CAAuBC,eAAvB,CAAwCC,eAAxC,KAA+D,yBAA/D,CAEA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBF,YAAyB,IAAXG,CAAAA,MAAW,2CACtD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKP,CAAAA,YAAL,CACI,mCACOK,KADP,GACcC,MAAM,CAACE,OADrB,GAGJ,IAAKP,CAAAA,eAAL,CACI,0BACOI,KAAK,CAACI,GAAN,CAAU,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,YAAL,GAAsBL,MAAM,CAACE,OAAP,CAAeG,YAArC,CAAoDL,MAAM,CAACE,OAA3D,CAAqEE,IAAzE,EAAd,CADP,EAGJ,IAAKR,CAAAA,eAAL,CACI,0BACOG,KAAK,CAACO,MAAN,CAAa,SAAAF,IAAI,QAAIA,CAAAA,IAAI,CAACC,YAAL,GAAsBL,MAAM,CAACE,OAAP,CAAeG,YAAzC,EAAjB,CADP,EAGJ,QACI,MAAON,CAAAA,KAAP,CAdR,CAgBH,CAjBD,CAmBA,cAAeD,CAAAA,eAAf","sourcesContent":["import { ADD_MOVEMENT, UPDATE_MOVEMENT, DELETE_MOVEMENT } from '../actions/constants.js';\n\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MOVEMENT: \n            return [ \n                ...state, action.payload\n            ];\n        case UPDATE_MOVEMENT:\n            return [\n                ...state.map(item => item.movementName === action.payload.movementName ? action.payload : item)\n            ];\n        case DELETE_MOVEMENT:\n            return [\n                ...state.filter(item => item.movementName !== action.payload.movementName)\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default movementReducer;"]},"metadata":{},"sourceType":"module"}