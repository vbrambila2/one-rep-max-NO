{"ast":null,"code":"var _jsxFileName = \"/Users/victorbrambila/one-rep-max/src/components/PercentChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; //import { useLocation } from 'react-router';\n\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  oneRepMaxWeight: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '20px',\n    fontFamily: 'PT Sans Caption',\n    fontSize: '18px',\n    marginTop: '100px'\n  },\n  oneRepMaxChart: {\n    background: '#C4C4C4',\n    borderRadius: '10px',\n    borderCollapse: 'separate',\n    borderSpacing: '10px',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  chartHeader: {\n    borderRadius: '10px',\n    padding: '5px',\n    fontSize: '24px',\n    display: 'flex',\n    justifyContent: 'space-around'\n  },\n  chartBox: {\n    background: '#E7E7E7',\n    border: '1px solid #C4C4C4',\n    padding: '5px',\n    fontSize: '24px',\n    display: 'flex',\n    justifyContent: 'space-around',\n    fontFamily: 'PT Sans Caption'\n  }\n}));\n\nconst PercentChart = props => {\n  _s();\n\n  const classes = useStyles(); //const location = useLocation();\n  //const pathArray = location.pathname.split('/');\n  //const movementWeightURL = (pathArray[3]);\n\n  const [results, setResults] = useState([]);\n  console.log(props.weight, \"weight\");\n  const mapWeights = props.weight.map(movement => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movement.movementWeight\n    }, movement.movementName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  });\n  console.log(mapWeights, \"Map\");\n  console.log(props.name, \"name\");\n  useEffect(() => {\n    const arr = [];\n    let percentage = 100;\n\n    while (percentage > 50) {\n      arr.push([percentage, mapWeights * percentage / 100]);\n      percentage -= 5;\n    }\n\n    setResults(arr);\n  }, [mapWeights]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.oneRepMaxWeight,\n      children: [\"One Rep Max: \", mapWeights]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.oneRepMaxChart,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.chartHeader,\n        children: [\"Percent\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: results.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chartBox,\n          children: [result[0], \"% \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: result[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 85\n          }, this)]\n        }, result[0], true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PercentChart, \"f166FCknn0CCqqMhsVoZYBIv38o=\", false, function () {\n  return [useStyles];\n});\n\n_c = PercentChart;\n\nconst mapStateToProps = state => {\n  return {\n    weight: state.move,\n    name: state.move\n  };\n};\n\nexport default connect(mapStateToProps)(PercentChart);\n\nvar _c;\n\n$RefreshReg$(_c, \"PercentChart\");","map":{"version":3,"sources":["/Users/victorbrambila/one-rep-max/src/components/PercentChart.js"],"names":["React","useEffect","useState","makeStyles","connect","useStyles","oneRepMaxWeight","display","alignItems","justifyContent","padding","fontFamily","fontSize","marginTop","oneRepMaxChart","background","borderRadius","borderCollapse","borderSpacing","flexDirection","chartHeader","chartBox","border","PercentChart","props","classes","results","setResults","console","log","weight","mapWeights","map","movement","movementWeight","movementName","name","arr","percentage","push","result","mapStateToProps","state","move"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n//import { useLocation } from 'react-router';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles(() => ({\n    oneRepMaxWeight: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '20px',\n        fontFamily: 'PT Sans Caption',\n        fontSize: '18px',\n        marginTop: '100px'\n    },\n    oneRepMaxChart: {\n        background: '#C4C4C4',\n        borderRadius: '10px',\n        borderCollapse: 'separate',\n        borderSpacing: '10px',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    chartHeader: {\n        borderRadius: '10px',\n        padding: '5px',\n        fontSize: '24px', \n        display: 'flex',\n        justifyContent: 'space-around'\n    },\n    chartBox: {\n        background: '#E7E7E7',\n        border: '1px solid #C4C4C4',\n        padding: '5px',\n        fontSize: '24px',\n        display: 'flex',\n        justifyContent: 'space-around',\n        fontFamily: 'PT Sans Caption',\n    },\n}));\n\nconst PercentChart = (props) => {\n    const classes = useStyles();\n    //const location = useLocation();\n    //const pathArray = location.pathname.split('/');\n    //const movementWeightURL = (pathArray[3]);\n    const [results, setResults] = useState([]);\n    console.log(props.weight, \"weight\");\n    const mapWeights = props.weight.map((movement) => {\n        return (\n            <div \n                key={movement.movementName}\n            >\n                {movement.movementWeight}\n            </div>\n        )\n    });\n    console.log(mapWeights, \"Map\");\n    console.log(props.name, \"name\");\n   \n\n    useEffect(() => {\n        const arr = [];\n        let percentage = 100;\n        while (percentage > 50 ) {\n            arr.push([percentage, (mapWeights * percentage) / 100]);\n            percentage -= 5;\n        }\n        setResults(arr);\n    }, [mapWeights]);\n\n    return (\n        <div>\n            <div className={classes.oneRepMaxWeight}>One Rep Max: {mapWeights}</div>   \n            <div className={classes.oneRepMaxChart}>\n                <h1 className={classes.chartHeader} >Percent<div>Weight</div></h1>\n                <div>\n                    {results.map((result) => (\n                    <div key={result[0]} className={classes.chartBox} >{result[0]}% <div>{result[1]}</div></div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        weight: state.move,\n        name: state.move\n    }\n};\n\n\nexport default connect(mapStateToProps)(PercentChart);\n"]},"metadata":{},"sourceType":"module"}