{"ast":null,"code":"var _jsxFileName = \"/Users/victorbrambila/one-rep-max/src/containers/UpdatePage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from '../components/Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { updateMovement } from '../actions/index';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  updatePage: {\n    marginTop: '150px',\n    display: 'flex',\n    justifyContent: 'center',\n    fontFamily: 'PT Sans Caption'\n  }\n}));\n\nconst renderInputName = ({\n  input,\n  label,\n  meta\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, \":   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"15px\",\n        color: \"red\"\n      },\n      children: \"ff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\nconst renderInputWeight = ({\n  input,\n  label,\n  meta\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, \":   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"15px\",\n        color: \"red\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\nconst UpdatePage = props => {\n  _s();\n\n  const classes = useStyles();\n\n  const onSubmit = formValues => {\n    if (props.newWeight !== props.weight) {\n      props.updateMovement(formValues);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Update Movement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.updatePage,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: props.handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"movementName\",\n          component: renderInputName,\n          label: \"Movement Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"movementWeight\",\n          label: \"New One Rep Max: \",\n          component: renderInputWeight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdatePage, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = UpdatePage;\n\nconst mapStateToProps = state => {\n  return {\n    weight: state.move,\n    newWeight: state.newMove\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateMovement: formValues => dispatch(updateMovement(formValues))\n  };\n};\n\nconst formWrap = reduxForm({\n  form: 'addMovementForm'\n})(UpdatePage);\nexport default connect(mapStateToProps, mapDispatchToProps)(formWrap);\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePage\");","map":{"version":3,"sources":["/Users/victorbrambila/one-rep-max/src/containers/UpdatePage.js"],"names":["React","Header","makeStyles","updateMovement","connect","Field","reduxForm","useStyles","updatePage","marginTop","display","justifyContent","fontFamily","renderInputName","input","label","meta","fontSize","color","renderInputWeight","UpdatePage","props","classes","onSubmit","formValues","newWeight","weight","handleSubmit","mapStateToProps","state","move","newMove","mapDispatchToProps","dispatch","formWrap","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { updateMovement } from '../actions/index';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\n\nconst useStyles = makeStyles(() => ({\n    updatePage: {\n        marginTop: '150px',\n        display: 'flex',\n        justifyContent: 'center',\n        fontFamily: 'PT Sans Caption',\n    }\n}));\n\nconst renderInputName = ({ input, label, meta }) => {\n    return (\n        <div>\n            <label>{label}:   </label>\n            <input {...input} type=\"text\" /> \n            <div style={{fontSize: \"15px\", color:\"red\"}}>ff</div>\n        </div>    \n    )  \n};\n\nconst renderInputWeight = ({ input, label, meta }) => {\n    return (\n        <div>\n            <label>{label}:   </label>\n            <input {...input} type=\"number\" /> \n            <div style={{fontSize: \"15px\", color:\"red\"}}></div>\n        </div>    \n    )  \n};\n\nconst UpdatePage = (props) => {\n    const classes = useStyles();\n    const onSubmit = (formValues) => {\n        if (props.newWeight !== props.weight) {\n            props.updateMovement(formValues)\n        }\n    };\n\n    return (\n        <div>\n            <Header title=\"Update Movement\" />\n            <div className={classes.updatePage}>\n                <form onSubmit={props.handleSubmit(onSubmit)}>\n                    <Field \n                        name=\"movementName\"\n                        component={renderInputName} \n                        label=\"Movement Name\" \n                    />\n                    <Field\n                        name=\"movementWeight\"  \n                        label=\"New One Rep Max: \" \n                        component={renderInputWeight}\n                    />\n                    <button>Submit</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n      weight: state.move,\n      newWeight: state.newMove\n    };\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    return({\n        updateMovement: (formValues) => dispatch(updateMovement(formValues)),\n    })\n};\n\n  const formWrap = reduxForm({\n    form: 'addMovementForm',\n})(UpdatePage);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(formWrap);"]},"metadata":{},"sourceType":"module"}