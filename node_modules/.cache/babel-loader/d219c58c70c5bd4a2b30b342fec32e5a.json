{"ast":null,"code":"import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT, FETCH_MOVEMENT } from '../actions/constants.js';\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_MOVEMENT:\n      return [{ ...state,\n        [action.payload.id]: action.payload\n      }];\n\n    case FETCH_MOVEMENT:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case UPDATE_MOVEMENT:\n      return state.map(item => {\n        if (item.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return item;\n        }\n      });\n\n    case DELETE_MOVEMENT:\n      return [...state.filter(item => item.movementName !== action.payload.movementName)];\n\n    default:\n      return state;\n  }\n};\n\nexport default movementReducer;","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/src/reducers/movementReducer.js"],"names":["UPDATE_MOVEMENT","DELETE_MOVEMENT","CREATE_MOVEMENT","FETCH_MOVEMENT","initialState","movementReducer","state","action","type","payload","id","map","item","filter","movementName"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,eAA3C,EAA4DC,cAA5D,QAAkF,yBAAlF;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,eAAL;AACI,aAAO,CAAC,EACJ,GAAGI,KADC;AACM,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AADlC,OAAD,CAAP;;AAGJ,SAAKN,cAAL;AACI,aAAO,EAAE,GAAGG,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAqBH,MAAM,CAACE;AAAxC,OAAP;;AACJ,SAAKT,eAAL;AACI,aAAOM,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACrB,YAAIA,IAAI,CAACF,EAAL,KAAYH,MAAM,CAACE,OAAP,CAAeC,EAA/B,EAAmC;AAC/B,iBAAOH,MAAM,CAACE,OAAd;AACH,SAFD,MAEO;AACH,iBAAOG,IAAP;AACH;AACJ,OANM,CAAP;;AAOJ,SAAKX,eAAL;AACI,aAAO,CACH,GAAGK,KAAK,CAACO,MAAN,CAAaD,IAAI,IAAIA,IAAI,CAACE,YAAL,KAAsBP,MAAM,CAACE,OAAP,CAAeK,YAA1D,CADA,CAAP;;AAGJ;AACI,aAAOR,KAAP;AApBR;AAsBH,CAvBD;;AAyBA,eAAeD,eAAf","sourcesContent":["import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT, FETCH_MOVEMENT } from '../actions/constants.js';\n\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_MOVEMENT: \n            return [{ \n                ...state, [action.payload.id]: action.payload\n            }];\n        case FETCH_MOVEMENT:\n            return { ...state, [action.payload.id]: action.payload };\n        case UPDATE_MOVEMENT:\n            return state.map(item => {\n                if (item.id === action.payload.id) {\n                    return action.payload\n                } else {\n                    return item\n                }\n            });\n        case DELETE_MOVEMENT:\n            return [\n                ...state.filter(item => item.movementName !== action.payload.movementName)\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default movementReducer;"]},"metadata":{},"sourceType":"module"}