{"ast":null,"code":"import _toConsumableArray from\"/Users/victorbrambila/ORM/one-rep-max/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{UPDATE_MOVEMENT,DELETE_MOVEMENT,CREATE_MOVEMENT,FETCH_MOVEMENTS}from'../actions/constants.js';var initialState=[];var movementReducer=function movementReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CREATE_MOVEMENT:return[].concat(_toConsumableArray(state),[action.payload]);case UPDATE_MOVEMENT:return state.map(function(item){return item.id===action.payload.id?action.payload:item;});case DELETE_MOVEMENT:return state.filter(function(item){return item.id!==action.payload;});case FETCH_MOVEMENTS:return action.payload;default:return state;}};export default movementReducer;","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/src/reducers/movementReducer.js"],"names":["UPDATE_MOVEMENT","DELETE_MOVEMENT","CREATE_MOVEMENT","FETCH_MOVEMENTS","initialState","movementReducer","state","action","type","payload","map","item","id","filter"],"mappings":"gIAAA,OAASA,eAAT,CAA0BC,eAA1B,CAA2CC,eAA3C,CAA4DC,eAA5D,KAAmF,yBAAnF,CAEA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBF,YAAyB,IAAXG,CAAAA,MAAW,2CACtD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,eAAL,CACI,mCAAYI,KAAZ,GAAmBC,MAAM,CAACE,OAA1B,GACJ,IAAKT,CAAAA,eAAL,CACI,MAAOM,CAAAA,KAAK,CAACI,GAAN,CAAU,SAAAC,IAAI,QAAKA,CAAAA,IAAI,CAACC,EAAL,GAAYL,MAAM,CAACE,OAAP,CAAeG,EAA3B,CAAgCL,MAAM,CAACE,OAAvC,CAAiDE,IAAtD,EAAd,CAAP,CACJ,IAAKV,CAAAA,eAAL,CACI,MAAOK,CAAAA,KAAK,CAACO,MAAN,CAAa,SAAAF,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYL,MAAM,CAACE,OAAvB,EAAjB,CAAP,CACJ,IAAKN,CAAAA,eAAL,CACI,MAAQI,CAAAA,MAAM,CAACE,OAAf,CACJ,QACI,MAAOH,CAAAA,KAAP,CAVR,CAYH,CAbD,CAeA,cAAeD,CAAAA,eAAf","sourcesContent":["import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT, FETCH_MOVEMENTS } from '../actions/constants.js';\n\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_MOVEMENT: \n            return [ ...state, action.payload ];\n        case UPDATE_MOVEMENT:\n            return state.map(item =>  item.id === action.payload.id ? action.payload : item )\n        case DELETE_MOVEMENT:  \n            return state.filter(item => item.id !== action.payload)\n        case FETCH_MOVEMENTS:\n            return  action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default movementReducer;"]},"metadata":{},"sourceType":"module"}