{"ast":null,"code":"var _jsxFileName = \"/Users/victorbrambila/ORM/one-rep-max/src/containers/UpdatePage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from '../components/Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { updateMovement } from '../actions/index';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  updatePage: {\n    marginTop: '150px',\n    display: 'flex',\n    justifyContent: 'center',\n    fontFamily: 'PT Sans Caption'\n  },\n  updateMovementDiv: {\n    background: '#C4C4C4',\n    fontFamily: 'PT Sans Caption',\n    fontSize: '18px',\n    borderRadius: '10px',\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'right'\n  }\n}));\n\nconst renderInputName = ({\n  selected,\n  input,\n  label\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, \": \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      autoFocus: true,\n      type: \"text\",\n      value: selected.movementName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\nconst renderNewInputWeight = ({\n  input,\n  label\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, \": \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\nconst UpdatePage = props => {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation();\n  const pathArray = location.pathname.split('/');\n  const movementIDURL = pathArray[1];\n  const selected = props.move.find(move => move.id === Number(movementIDURL));\n  const selectedID = selected.id;\n\n  const onSubmit = formValues => {\n    console.log(formValues, \"update\");\n    props.updateMovement(selectedID, formValues);\n  }; //console.log(selectedID, \"selected\");\n\n\n  console.log(props.move, \"home\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Update Movement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.updatePage,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.updateMovementDiv,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: props.handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"movementName\",\n            label: \"Movement Selected\",\n            component: renderInputName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"movementWeight\",\n            label: \"New One Rep Max\",\n            component: renderNewInputWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdatePage, \"iVCX2yDQgo1lOrIkgS31pg3flb4=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = UpdatePage;\n\nconst mapStateToProps = state => {\n  return {\n    move: state.move\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateMovement: (selectedID, formValues) => dispatch(updateMovement(selectedID, formValues))\n  };\n};\n\nconst formWrap = reduxForm({\n  form: 'updateMovementForm'\n})(UpdatePage);\nexport default connect(mapStateToProps, mapDispatchToProps)(formWrap);\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePage\");","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/src/containers/UpdatePage.js"],"names":["React","Header","makeStyles","updateMovement","connect","Field","reduxForm","useLocation","useStyles","updatePage","marginTop","display","justifyContent","fontFamily","updateMovementDiv","background","fontSize","borderRadius","padding","flexDirection","textAlign","renderInputName","selected","input","label","movementName","renderNewInputWeight","UpdatePage","props","classes","location","pathArray","pathname","split","movementIDURL","move","find","id","Number","selectedID","onSubmit","formValues","console","log","handleSubmit","mapStateToProps","state","mapDispatchToProps","dispatch","formWrap","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { updateMovement } from '../actions/index';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { useLocation } from 'react-router';\n\nconst useStyles = makeStyles(() => ({\n    updatePage: {\n        marginTop: '150px',\n        display: 'flex',\n        justifyContent: 'center',\n        fontFamily: 'PT Sans Caption',\n    },\n    updateMovementDiv: {\n        background: '#C4C4C4',\n        fontFamily: 'PT Sans Caption',\n        fontSize: '18px',\n        borderRadius: '10px',\n        padding: '20px',\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'right',\n      },\n}));\n\n\nconst renderInputName = ({ selected, input, label }) => {\n    return (\n        <div>\n            <label>{label}: </label>\n            <input {...input} autoFocus={true} type=\"text\" value={selected.movementName} /> \n        </div>    \n    )  \n};\n\nconst renderNewInputWeight = ({ input, label }) => {\n    return (\n        <div>\n            <label>{label}: </label>\n            <input {...input} type=\"number\" /> \n        </div>    \n    )  \n};\n\nconst UpdatePage = (props) => {\n    const classes = useStyles();\n    const location = useLocation();\n    const pathArray = location.pathname.split('/');\n    const movementIDURL = (pathArray[1]);\n    const selected = props.move.find((move) => move.id === Number(movementIDURL));\n    const selectedID = selected.id\n\n\n    const onSubmit = formValues => {\n        console.log(formValues, \"update\");\n        props.updateMovement(selectedID, formValues)\n    };\n\n    //console.log(selectedID, \"selected\");\n    console.log(props.move, \"home\");\n\n    return (\n        <div>\n            <Header title=\"Update Movement\" />\n            <div className={classes.updatePage}>\n                <div className={classes.updateMovementDiv}>\n                <form onSubmit={props.handleSubmit(onSubmit)}>\n                    <Field \n                        name=\"movementName\"\n                        label=\"Movement Selected\"\n                        component={renderInputName} \n                    />\n                    <Field\n                        name=\"movementWeight\"  \n                        label=\"New One Rep Max\" \n                        component={renderNewInputWeight}\n                    />\n                    <button type=\"submit\">Update</button>\n                </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        move: state.move\n    };\n  };\n\nconst mapDispatchToProps = dispatch => {\n    return({\n        updateMovement: (selectedID, formValues) => dispatch(updateMovement(selectedID, formValues)),\n    })\n};\n\nconst formWrap = reduxForm({\n    form: 'updateMovementForm',\n})(UpdatePage);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(formWrap);"]},"metadata":{},"sourceType":"module"}