{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _immutable = require(\"immutable\");\n\nvar _default = function _default(list, index, removeNum, value) {\n  list = _immutable.List.isList(list) ? list : (0, _immutable.List)();\n\n  if (index < list.count()) {\n    if (value === undefined && !removeNum) {\n      // inserting undefined\n      // first insert true and then re-set it to undefined\n      return list.splice(index, 0, true) // placeholder\n      .set(index, undefined);\n    }\n\n    if (value != null) {\n      return list.splice(index, removeNum, value); // removing and adding\n    } else {\n      return list.splice(index, removeNum); // removing\n    }\n  }\n\n  if (removeNum) {\n    // trying to remove non-existant item: return original array\n    return list;\n  } // trying to add outside of range: just set value\n\n\n  return list.set(index, value);\n};\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/node_modules/redux-form/lib/structure/immutable/splice.js"],"names":["exports","__esModule","_immutable","require","_default","list","index","removeNum","value","List","isList","count","undefined","splice","set"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,UAAU,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AAEA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,SAA/B,EAA0CC,KAA1C,EAAiD;AAC9DH,EAAAA,IAAI,GAAGH,UAAU,CAACO,IAAX,CAAgBC,MAAhB,CAAuBL,IAAvB,IAA+BA,IAA/B,GAAsC,CAAC,GAAGH,UAAU,CAACO,IAAf,GAA7C;;AAEA,MAAIH,KAAK,GAAGD,IAAI,CAACM,KAAL,EAAZ,EAA0B;AACxB,QAAIH,KAAK,KAAKI,SAAV,IAAuB,CAACL,SAA5B,EAAuC;AACrC;AACA;AACA,aAAOF,IAAI,CAACQ,MAAL,CAAYP,KAAZ,EAAmB,CAAnB,EAAsB,IAAtB,EAA4B;AAA5B,OACNQ,GADM,CACFR,KADE,EACKM,SADL,CAAP;AAED;;AAED,QAAIJ,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAOH,IAAI,CAACQ,MAAL,CAAYP,KAAZ,EAAmBC,SAAnB,EAA8BC,KAA9B,CAAP,CADiB,CAC4B;AAC9C,KAFD,MAEO;AACL,aAAOH,IAAI,CAACQ,MAAL,CAAYP,KAAZ,EAAmBC,SAAnB,CAAP,CADK,CACiC;AACvC;AACF;;AAED,MAAIA,SAAJ,EAAe;AACb;AACA,WAAOF,IAAP;AACD,GArB6D,CAqB5D;;;AAGF,SAAOA,IAAI,CAACS,GAAL,CAASR,KAAT,EAAgBE,KAAhB,CAAP;AACD,CAzBD;;AA2BAR,OAAO,CAAC,SAAD,CAAP,GAAqBI,QAArB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _immutable = require(\"immutable\");\n\nvar _default = function _default(list, index, removeNum, value) {\n  list = _immutable.List.isList(list) ? list : (0, _immutable.List)();\n\n  if (index < list.count()) {\n    if (value === undefined && !removeNum) {\n      // inserting undefined\n      // first insert true and then re-set it to undefined\n      return list.splice(index, 0, true) // placeholder\n      .set(index, undefined);\n    }\n\n    if (value != null) {\n      return list.splice(index, removeNum, value); // removing and adding\n    } else {\n      return list.splice(index, removeNum); // removing\n    }\n  }\n\n  if (removeNum) {\n    // trying to remove non-existant item: return original array\n    return list;\n  } // trying to add outside of range: just set value\n\n\n  return list.set(index, value);\n};\n\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}