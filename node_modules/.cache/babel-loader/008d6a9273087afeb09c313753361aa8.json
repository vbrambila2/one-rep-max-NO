{"ast":null,"code":"var _jsxFileName = \"/Users/victorbrambila/ORM/one-rep-max/src/containers/AddPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from '../components/Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { createMovement } from '../actions/index';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  addPage: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '100px'\n  },\n  addMovementDiv: {\n    background: '#C4C4C4',\n    fontFamily: 'PT Sans Caption',\n    fontSize: '18px',\n    borderRadius: '10px',\n    padding: '20px',\n    marginTop: '50px',\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'right'\n  },\n  movementName: {\n    padding: '10px',\n    margin: '10px'\n  },\n  textBoxColor: {\n    background: 'white',\n    borderRadius: '10px'\n  },\n  movementWeight: {\n    margin: '10px',\n    padding: '10px'\n  },\n  addButton: {\n    width: '50px',\n    borderRadius: '10px',\n    marginLeft: '95px'\n  }\n}));\n\nconst renderInputName = ({\n  input,\n  label,\n  meta\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, \":   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"15px\",\n        color: \"red\"\n      },\n      children: renderError(meta)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\nconst renderInputWeight = ({\n  input,\n  label,\n  meta\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, \":   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"15px\",\n        color: \"red\"\n      },\n      children: renderError(meta)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\nconst renderError = ({\n  error,\n  touched\n}) => {\n  if (touched && error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  }\n\n  ;\n};\n\nconst AddPage = props => {\n  _s();\n\n  const classes = useStyles();\n\n  const onSubmit = formValues => {\n    props.createMovement(formValues);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Add Movement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.addPage,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.addMovementDiv,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: props.handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"movementName\",\n            component: renderInputName,\n            label: \"Movement Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"movementWeight\",\n            component: renderInputWeight,\n            label: \"One Rep Max\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddPage, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddPage;\n\nconst mapStateToProps = state => {\n  return {\n    move: state.move\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createMovement: formValues => dispatch(createMovement(formValues))\n  };\n};\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.movementName) {\n    errors.movementName = \"Please enter a Name\";\n  }\n\n  if (!formValues.movementWeight) {\n    errors.movementWeight = \"Please enter a Weight\";\n  }\n\n  return errors;\n};\n\nconst formWrap = reduxForm({\n  form: 'addMovementForm',\n  validate: validate\n})(AddPage);\nexport default connect(mapStateToProps, mapDispatchToProps)(formWrap);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPage\");","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/src/containers/AddPage.js"],"names":["React","Header","makeStyles","connect","createMovement","Field","reduxForm","useStyles","addPage","display","justifyContent","marginTop","addMovementDiv","background","fontFamily","fontSize","borderRadius","padding","flexDirection","textAlign","movementName","margin","textBoxColor","movementWeight","addButton","width","marginLeft","renderInputName","input","label","meta","color","renderError","renderInputWeight","error","touched","AddPage","props","classes","onSubmit","formValues","handleSubmit","mapStateToProps","state","move","mapDispatchToProps","dispatch","validate","errors","formWrap","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { createMovement } from '../actions/index';\nimport { Field, reduxForm } from 'redux-form';\n\nconst useStyles = makeStyles(() => ({\n    addPage: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '100px'\n    },\n    addMovementDiv: {\n        background: '#C4C4C4',\n        fontFamily: 'PT Sans Caption',\n        fontSize: '18px',\n        borderRadius: '10px',\n        padding: '20px',\n        marginTop: '50px',\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'right',\n      },\n      movementName: {\n        padding: '10px',\n        margin: '10px',\n      },\n      textBoxColor: {\n        background: 'white',\n        borderRadius: '10px',\n      },\n      movementWeight: {\n        margin: '10px',\n        padding: '10px',\n      },\n      addButton: {\n          width: '50px',\n          borderRadius: '10px',\n          marginLeft: '95px'\n      },\n}));\n\nconst renderInputName = ({ input, label, meta }) => {\n    return (\n        <div>\n            <label>{label}:   </label>\n            <input {...input} type=\"text\" /> \n            <div style={{fontSize: \"15px\", color:\"red\"}}>{renderError(meta)}</div>\n        </div>    \n    )  \n};\n\nconst renderInputWeight = ({ input, label, meta }) => {\n    return (\n        <div>\n            <label>{label}:   </label>\n            <input {...input} type=\"number\" /> \n            <div style={{fontSize: \"15px\", color:\"red\"}}>{renderError(meta)}</div>\n        </div>    \n    )  \n};\n\nconst renderError = ({ error, touched }) => {\n    if (touched && error ) {\n        return <div>{error}</div>\n    };\n};\n\nconst AddPage = (props) => {\n    const classes = useStyles();\n    const onSubmit = (formValues) => {\n        props.createMovement(formValues);\n    };\n\n    return (\n        <div>\n            <Header title=\"Add Movement\" />\n            <div className={classes.addPage}>\n                <div className={classes.addMovementDiv}>\n                    <form onSubmit={props.handleSubmit(onSubmit)} >\n                        <Field \n                            name=\"movementName\"\n                            component={renderInputName} \n                            label=\"Movement Name\" \n                        />\n                        <Field\n                            name=\"movementWeight\" \n                            component={renderInputWeight} \n                            label=\"One Rep Max\" \n                         />\n                         <button >Submit</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        move: state.move   \n    }   \n};\n\nconst mapDispatchToProps = dispatch => {\n    return({\n        createMovement: (formValues) => dispatch(createMovement(formValues)),\n    })\n};\n\nconst validate = (formValues) => {\n    const errors = {};\n\n    if (!formValues.movementName) {\n        errors.movementName = \"Please enter a Name\";\n    }\n\n    if (!formValues.movementWeight) {\n        errors.movementWeight = \"Please enter a Weight\";\n    }\n\n    return errors;\n};\n\nconst formWrap = reduxForm({\n    form: 'addMovementForm',\n    validate: validate,\n})(AddPage);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(formWrap);"]},"metadata":{},"sourceType":"module"}