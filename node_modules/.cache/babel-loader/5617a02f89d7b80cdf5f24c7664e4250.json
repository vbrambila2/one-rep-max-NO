{"ast":null,"code":"import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT } from '../actions/constants.js';\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_MOVEMENT:\n      return [...state, action.payload];\n\n    case UPDATE_MOVEMENT:\n      const {\n        id,\n        newWeight\n      } = action.payload;\n      return state.map(item => {\n        if (item.id === id) {\n          item.movementWeight = newWeight;\n        }\n\n        return item;\n      });\n\n    case DELETE_MOVEMENT:\n      return [...state.filter(item => item.movementName !== action.payload.movementName)];\n\n    default:\n      return state;\n  }\n};\n\nexport default movementReducer;","map":{"version":3,"sources":["/Users/victorbrambila/ORM/one-rep-max/src/reducers/movementReducer.js"],"names":["UPDATE_MOVEMENT","DELETE_MOVEMENT","CREATE_MOVEMENT","initialState","movementReducer","state","action","type","payload","id","newWeight","map","item","movementWeight","filter","movementName"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,eAA3C,QAAkE,yBAAlE;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,eAAL;AACI,aAAO,CACH,GAAGG,KADA,EACOC,MAAM,CAACE,OADd,CAAP;;AAGJ,SAAKR,eAAL;AACI,YAAM;AAAES,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAoBJ,MAAM,CAACE,OAAjC;AACA,aAAOH,KAAK,CAACM,GAAN,CAAUC,IAAI,IAAI;AACrB,YAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB;AAChBG,UAAAA,IAAI,CAACC,cAAL,GAAsBH,SAAtB;AACH;;AACD,eAAOE,IAAP;AACD,OALI,CAAP;;AAMJ,SAAKX,eAAL;AACI,aAAO,CACH,GAAGI,KAAK,CAACS,MAAN,CAAaF,IAAI,IAAIA,IAAI,CAACG,YAAL,KAAsBT,MAAM,CAACE,OAAP,CAAeO,YAA1D,CADA,CAAP;;AAGJ;AACI,aAAOV,KAAP;AAlBR;AAoBH,CArBD;;AAuBA,eAAeD,eAAf","sourcesContent":["import { UPDATE_MOVEMENT, DELETE_MOVEMENT, CREATE_MOVEMENT } from '../actions/constants.js';\n\nconst initialState = [];\n\nconst movementReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_MOVEMENT: \n            return [ \n                ...state, action.payload\n            ];\n        case UPDATE_MOVEMENT:\n            const { id, newWeight } = action.payload;\n            return state.map(item => {\n                if (item.id === id) {\n                    item.movementWeight = newWeight;\n                }\n                return item;\n              });\n        case DELETE_MOVEMENT:\n            return [\n                ...state.filter(item => item.movementName !== action.payload.movementName)\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default movementReducer;"]},"metadata":{},"sourceType":"module"}